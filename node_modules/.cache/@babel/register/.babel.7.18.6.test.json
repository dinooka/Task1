{"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS code - projects\\\\webdriverio\\\\Task 1\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS code - projects\\\\webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS code - projects\\\\webdriverio\\\\Task 1\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS code - projects\\\\webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  //\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // from which `wdio` was called.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./features/**/*.feature'],\n  // Patterns to exclude.\n  exclude: [// 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n    // grid with only 5 firefox instances available you can make sure that not more than\n    // 5 instances get started at a time.\n    maxInstances: 5,\n    //\n    browserName: 'chrome',\n    acceptInsecureCerts: true // If outputDir is provided WebdriverIO can capture driver session logs\n    // it is possible to configure which logTypes to include/exclude.\n    // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n    // excludeDriverLogs: ['bugreport', 'server'],\n\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://uitestingplayground.com/',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: ['chromedriver'],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'cucumber',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  // reporters: ['dot'],\n  //\n  // If you are using Cucumber you need to specify the location of your step definitions.\n  cucumberOpts: {\n    // <string[]> (file/dir) require files before executing features\n    require: ['./features/step-definitions/steps.js'],\n    // <boolean> show full backtrace for errors\n    backtrace: false,\n    // <string[]> (\"extension:module\") require files with the given EXTENSION after requiring MODULE (repeatable)\n    requireModule: [],\n    // <boolean> invoke formatters without executing steps\n    dryRun: false,\n    // <boolean> abort the run on first failure\n    failFast: false,\n    // <boolean> hide step definition snippets for pending steps\n    snippets: true,\n    // <boolean> hide source uris\n    source: true,\n    // <boolean> fail if there are any undefined or pending steps\n    strict: false,\n    // <string> (expression) only execute the features or scenarios with tags matching the expression\n    tagExpression: '',\n    // <number> timeout for step definitions\n    timeout: 60000,\n    // <boolean> Enable this config to treat undefined definitions as warnings.\n    ignoreUndefinedDefinitions: false\n  } //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {[type]} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {Number} exitCode 0 - success, 1 - fail\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {Number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {String} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {Object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n\n  /**\n   * Cucumber Hooks\n   *\n   * Runs before a Cucumber Feature.\n   * @param {String}                   uri      path to feature file\n   * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n   */\n  // beforeFeature: function (uri, feature) {\n  // },\n\n  /**\n   *\n   * Runs before a Cucumber Scenario.\n   * @param {ITestCaseHookParameter} world    world object containing information on pickle and test step\n   * @param {Object}                 context  Cucumber World object\n   */\n  // beforeScenario: function (world, context) {\n  // },\n\n  /**\n   *\n   * Runs before a Cucumber Step.\n   * @param {Pickle.IPickleStep} step     step data\n   * @param {IPickle}            scenario scenario pickle\n   * @param {Object}             context  Cucumber World object\n   */\n  // beforeStep: function (step, scenario, context) {\n  // },\n\n  /**\n   *\n   * Runs after a Cucumber Step.\n   * @param {Pickle.IPickleStep} step             step data\n   * @param {IPickle}            scenario         scenario pickle\n   * @param {Object}             result           results object containing scenario results\n   * @param {boolean}            result.passed    true if scenario has passed\n   * @param {string}             result.error     error stack if scenario failed\n   * @param {number}             result.duration  duration of scenario in milliseconds\n   * @param {Object}             context          Cucumber World object\n   */\n  // afterStep: function (step, scenario, result, context) {\n  // },\n\n  /**\n   *\n   * Runs after a Cucumber Scenario.\n   * @param {ITestCaseHookParameter} world            world object containing information on pickle and test step\n   * @param {Object}                 result           results object containing scenario results\n   * @param {boolean}                result.passed    true if scenario has passed\n   * @param {string}                 result.error     error stack if scenario failed\n   * @param {number}                 result.duration  duration of scenario in milliseconds\n   * @param {Object}                 context          Cucumber World object\n   */\n  // afterScenario: function (world, result, context) {\n  // },\n\n  /**\n   *\n   * Runs after a Cucumber Feature.\n   * @param {String}                   uri      path to feature file\n   * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n   */\n  // afterFeature: function (uri, feature) {\n  // },\n\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {Number} result 0 - command success, 1 - command error\n   * @param {Object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {Number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {Object} exitCode 0 - success, 1 - fail\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n\n  /**\n  * Gets executed when a refresh happens.\n  * @param {String} oldSessionId session ID of the old session\n  * @param {String} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","specs","exclude","maxInstances","capabilities","browserName","acceptInsecureCerts","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","services","framework","cucumberOpts","require","backtrace","requireModule","dryRun","failFast","snippets","source","strict","tagExpression","timeout","ignoreUndefinedDefinitions"],"sourceRoot":"F:\\VS code - projects\\webdriverio\\Task 1\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    //\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // from which `wdio` was called.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './features/**/*.feature'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n    \n        // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n        // grid with only 5 firefox instances available you can make sure that not more than\n        // 5 instances get started at a time.\n        maxInstances: 5,\n        //\n        browserName: 'chrome',\n        acceptInsecureCerts: true\n        // If outputDir is provided WebdriverIO can capture driver session logs\n        // it is possible to configure which logTypes to include/exclude.\n        // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n        // excludeDriverLogs: ['bugreport', 'server'],\n    }],\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://uitestingplayground.com/',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: ['chromedriver'],\n    \n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'cucumber',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    // reporters: ['dot'],\n\n\n    //\n    // If you are using Cucumber you need to specify the location of your step definitions.\n    cucumberOpts: {\n        // <string[]> (file/dir) require files before executing features\n        require: ['./features/step-definitions/steps.js'],\n        // <boolean> show full backtrace for errors\n        backtrace: false,\n        // <string[]> (\"extension:module\") require files with the given EXTENSION after requiring MODULE (repeatable)\n        requireModule: [],\n        // <boolean> invoke formatters without executing steps\n        dryRun: false,\n        // <boolean> abort the run on first failure\n        failFast: false,\n        // <boolean> hide step definition snippets for pending steps\n        snippets: true,\n        // <boolean> hide source uris\n        source: true,\n        // <boolean> fail if there are any undefined or pending steps\n        strict: false,\n        // <string> (expression) only execute the features or scenarios with tags matching the expression\n        tagExpression: '',\n        // <number> timeout for step definitions\n        timeout: 60000,\n        // <boolean> Enable this config to treat undefined definitions as warnings.\n        ignoreUndefinedDefinitions: false\n    },\n    \n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {[type]} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {Number} exitCode 0 - success, 1 - fail\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {Number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {String} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {Object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Cucumber Hooks\n     *\n     * Runs before a Cucumber Feature.\n     * @param {String}                   uri      path to feature file\n     * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n     */\n    // beforeFeature: function (uri, feature) {\n    // },\n    /**\n     *\n     * Runs before a Cucumber Scenario.\n     * @param {ITestCaseHookParameter} world    world object containing information on pickle and test step\n     * @param {Object}                 context  Cucumber World object\n     */\n    // beforeScenario: function (world, context) {\n    // },\n    /**\n     *\n     * Runs before a Cucumber Step.\n     * @param {Pickle.IPickleStep} step     step data\n     * @param {IPickle}            scenario scenario pickle\n     * @param {Object}             context  Cucumber World object\n     */\n    // beforeStep: function (step, scenario, context) {\n    // },\n    /**\n     *\n     * Runs after a Cucumber Step.\n     * @param {Pickle.IPickleStep} step             step data\n     * @param {IPickle}            scenario         scenario pickle\n     * @param {Object}             result           results object containing scenario results\n     * @param {boolean}            result.passed    true if scenario has passed\n     * @param {string}             result.error     error stack if scenario failed\n     * @param {number}             result.duration  duration of scenario in milliseconds\n     * @param {Object}             context          Cucumber World object\n     */\n    // afterStep: function (step, scenario, result, context) {\n    // },\n    /**\n     *\n     * Runs after a Cucumber Scenario.\n     * @param {ITestCaseHookParameter} world            world object containing information on pickle and test step\n     * @param {Object}                 result           results object containing scenario results\n     * @param {boolean}                result.passed    true if scenario has passed\n     * @param {string}                 result.error     error stack if scenario failed\n     * @param {number}                 result.duration  duration of scenario in milliseconds\n     * @param {Object}                 context          Cucumber World object\n     */\n    // afterScenario: function (world, result, context) {\n    // },\n    /**\n     *\n     * Runs after a Cucumber Feature.\n     * @param {String}                   uri      path to feature file\n     * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n     */\n    // afterFeature: function (uri, feature) {\n    // },\n    \n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {Number} result 0 - command success, 1 - command error\n     * @param {Object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {Number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {Object} exitCode 0 - success, 1 - fail\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {String} oldSessionId session ID of the old session\n    * @param {String} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAR,GAAiB;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,yBADG,CAtBM;EAyBb;EACAC,OAAO,EAAE,CACL;EADK,CA1BI;EA6Bb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EA7CD;EA8Cb;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IAEX;IACA;IACA;IACAD,YAAY,EAAE,CALH;IAMX;IACAE,WAAW,EAAE,QAPF;IAQXC,mBAAmB,EAAE,IARV,CASX;IACA;IACA;IACA;;EAZW,CAAD,CAnDD;EAiEb;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAxEG;EAyEb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CA1FO;EA2Fb;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,iCAhGI;EAiGb;EACA;EACAC,cAAc,EAAE,KAnGH;EAoGb;EACA;EACA;EACAC,sBAAsB,EAAE,MAvGX;EAwGb;EACA;EACAC,oBAAoB,EAAE,CA1GT;EA2Gb;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,CAAC,cAAD,CAhHG;EAkHb;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,UAxHE;EAyHb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACAC,YAAY,EAAE;IACV;IACAC,OAAO,EAAE,CAAC,sCAAD,CAFC;IAGV;IACAC,SAAS,EAAE,KAJD;IAKV;IACAC,aAAa,EAAE,EANL;IAOV;IACAC,MAAM,EAAE,KARE;IASV;IACAC,QAAQ,EAAE,KAVA;IAWV;IACAC,QAAQ,EAAE,IAZA;IAaV;IACAC,MAAM,EAAE,IAdE;IAeV;IACAC,MAAM,EAAE,KAhBE;IAiBV;IACAC,aAAa,EAAE,EAlBL;IAmBV;IACAC,OAAO,EAAE,KApBC;IAqBV;IACAC,0BAA0B,EAAE;EAtBlB,CA3ID,CAoKb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;AAvUa,CAAjB"}},"mtime":1656424071899},"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS code - projects\\\\webdriverio\\\\Task 1\\\\features\\\\step-definitions\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS code - projects\\\\webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS code - projects\\\\webdriverio\\\\Task 1\\\\features\\\\step-definitions\\\\steps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS code - projects\\\\webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"const {\n  Given,\n  When,\n  Then\n} = require('@wdio/cucumber-framework'); // Given(/^I am on the (\\w+) page$/, async (page) => {\n//     await browser.url(`https://the-internet.herokuapp.com/${page}`);\n// });\n// When(/^I login with (\\w+) and (.+)$/, async (username, password) => {\n//     await $('#username').setValue(username);\n//     await $('#password').setValue(password);\n//     await $('button[type=\"submit\"]').click();\n// });\n// Then(/^I should see a flash message saying (.*)$/, async (message) => {\n//     await expect($('#flash')).toBeExisting();\n//     await expect($('#flash')).toHaveTextContaining(message);\n// });\n//import { Given } from '@wdio/cucumber-framework';\n\n\nconst chai = require('chai');\n\nconst assert = chai.assert;\nconst clickLink = $(\".//a[text()='Click']\");\nconst clickPageText = $(\".//h3\");\nconst homePageTitle = $(\".//h1\");\nconst badButton = $(\".//button[@id='badButton']\");\nGiven(\"the user navigates to the home page\", async () => {\n  await browser.url(\"/\");\n  await browser.maximizeWindow();\n  var actualHeader = await homePageTitle.getText();\n  var actualHeader = await actualHeader.replace(/(\\r\\n|\\n|\\r)/gm, \" \"); //console.log(\"actual page header = \" + actualHeader);   \n\n  assert.equal(actualHeader, \"UI Test Automation Playground\", 'Page header is incorrect');\n});\nThen(/^the user clicks the \"(.*)\" link$/, async keyword => {\n  await clickLink.click(); //await browser.debug();\n\n  const actualHeader = await clickPageText.getText();\n  assert.equal(actualHeader, keyword, 'Page header is incorrect');\n});\nThen(/^the user clicks the \"(.*)\" Button$/, async keyword => {\n  await badButton.click();\n  const newButton = $(\".//button[@class='btn btn-success']\");\n  await newButton.waitForDisplayed(2000);\n  const btnColor = await badButton.getCSSProperty('background-color');\n  const btnCol = JSON.stringify(btnColor);\n  var btnColorText = JSON.parse(btnCol);\n  console.log(\"actual button color = \" + btnColorText.value); //console.log(\"actual button color = \" + btnCol);\n\n  const expectedBtnColor = \"rrgba(0,123,255,1)\";\n  const actualBtnColor = btnColorText.value;\n  assert.equal(actualBtnColor, expectedBtnColor, 'Expected Button color = ' + expectedBtnColor, 'Actual button color = ' + actualBtnColor);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHaXZlbiIsIldoZW4iLCJUaGVuIiwicmVxdWlyZSIsImNoYWkiLCJhc3NlcnQiLCJjbGlja0xpbmsiLCIkIiwiY2xpY2tQYWdlVGV4dCIsImhvbWVQYWdlVGl0bGUiLCJiYWRCdXR0b24iLCJicm93c2VyIiwidXJsIiwibWF4aW1pemVXaW5kb3ciLCJhY3R1YWxIZWFkZXIiLCJnZXRUZXh0IiwicmVwbGFjZSIsImVxdWFsIiwia2V5d29yZCIsImNsaWNrIiwibmV3QnV0dG9uIiwid2FpdEZvckRpc3BsYXllZCIsImJ0bkNvbG9yIiwiZ2V0Q1NTUHJvcGVydHkiLCJidG5Db2wiLCJKU09OIiwic3RyaW5naWZ5IiwiYnRuQ29sb3JUZXh0IiwicGFyc2UiLCJjb25zb2xlIiwibG9nIiwidmFsdWUiLCJleHBlY3RlZEJ0bkNvbG9yIiwiYWN0dWFsQnRuQ29sb3IiXSwic291cmNlUm9vdCI6IkY6XFxWUyBjb2RlIC0gcHJvamVjdHNcXHdlYmRyaXZlcmlvXFxUYXNrIDFcXGZlYXR1cmVzXFxzdGVwLWRlZmluaXRpb25zXFwiLCJzb3VyY2VzIjpbInN0ZXBzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgR2l2ZW4sIFdoZW4sIFRoZW4gfSA9IHJlcXVpcmUoJ0B3ZGlvL2N1Y3VtYmVyLWZyYW1ld29yaycpO1xuXG4vLyBHaXZlbigvXkkgYW0gb24gdGhlIChcXHcrKSBwYWdlJC8sIGFzeW5jIChwYWdlKSA9PiB7XG4vLyAgICAgYXdhaXQgYnJvd3Nlci51cmwoYGh0dHBzOi8vdGhlLWludGVybmV0Lmhlcm9rdWFwcC5jb20vJHtwYWdlfWApO1xuLy8gfSk7XG5cbi8vIFdoZW4oL15JIGxvZ2luIHdpdGggKFxcdyspIGFuZCAoLispJC8sIGFzeW5jICh1c2VybmFtZSwgcGFzc3dvcmQpID0+IHtcbi8vICAgICBhd2FpdCAkKCcjdXNlcm5hbWUnKS5zZXRWYWx1ZSh1c2VybmFtZSk7XG4vLyAgICAgYXdhaXQgJCgnI3Bhc3N3b3JkJykuc2V0VmFsdWUocGFzc3dvcmQpO1xuLy8gICAgIGF3YWl0ICQoJ2J1dHRvblt0eXBlPVwic3VibWl0XCJdJykuY2xpY2soKTtcbi8vIH0pO1xuXG4vLyBUaGVuKC9eSSBzaG91bGQgc2VlIGEgZmxhc2ggbWVzc2FnZSBzYXlpbmcgKC4qKSQvLCBhc3luYyAobWVzc2FnZSkgPT4ge1xuLy8gICAgIGF3YWl0IGV4cGVjdCgkKCcjZmxhc2gnKSkudG9CZUV4aXN0aW5nKCk7XG4vLyAgICAgYXdhaXQgZXhwZWN0KCQoJyNmbGFzaCcpKS50b0hhdmVUZXh0Q29udGFpbmluZyhtZXNzYWdlKTtcbi8vIH0pO1xuLy9pbXBvcnQgeyBHaXZlbiB9IGZyb20gJ0B3ZGlvL2N1Y3VtYmVyLWZyYW1ld29yayc7XG5cbmNvbnN0IGNoYWkgPSByZXF1aXJlKCdjaGFpJyk7XG5jb25zdCBhc3NlcnQgPSBjaGFpLmFzc2VydDsgXG5cbmNvbnN0IGNsaWNrTGluayA9ICQoXCIuLy9hW3RleHQoKT0nQ2xpY2snXVwiKTtcbmNvbnN0IGNsaWNrUGFnZVRleHQgPSAkKFwiLi8vaDNcIik7XG5jb25zdCBob21lUGFnZVRpdGxlID0gJChcIi4vL2gxXCIpO1xuY29uc3QgYmFkQnV0dG9uID0gJChcIi4vL2J1dHRvbltAaWQ9J2JhZEJ1dHRvbiddXCIpO1xuXG5cblxuR2l2ZW4oXCJ0aGUgdXNlciBuYXZpZ2F0ZXMgdG8gdGhlIGhvbWUgcGFnZVwiLCBhc3luYygpID0+eyAgICAgICAgIFxuICAgIGF3YWl0IGJyb3dzZXIudXJsKFwiL1wiKTtcbiAgICBhd2FpdCBicm93c2VyLm1heGltaXplV2luZG93KCk7XG5cbiAgICB2YXIgYWN0dWFsSGVhZGVyID0gYXdhaXQgaG9tZVBhZ2VUaXRsZS5nZXRUZXh0KCk7XG4gICAgdmFyIGFjdHVhbEhlYWRlciA9IGF3YWl0IGFjdHVhbEhlYWRlci5yZXBsYWNlKC8oXFxyXFxufFxcbnxcXHIpL2dtLCBcIiBcIik7XG4gICAgLy9jb25zb2xlLmxvZyhcImFjdHVhbCBwYWdlIGhlYWRlciA9IFwiICsgYWN0dWFsSGVhZGVyKTsgICBcbiAgICBhc3NlcnQuZXF1YWwoYWN0dWFsSGVhZGVyLFwiVUkgVGVzdCBBdXRvbWF0aW9uIFBsYXlncm91bmRcIiwnUGFnZSBoZWFkZXIgaXMgaW5jb3JyZWN0Jyk7ICAgIFxuXG59KTtcblxuVGhlbigvXnRoZSB1c2VyIGNsaWNrcyB0aGUgXCIoLiopXCIgbGluayQvLCBhc3luYyAoa2V5d29yZCkgPT4ge1xuXG4gICAgYXdhaXQgY2xpY2tMaW5rLmNsaWNrKCk7XG4gICAgLy9hd2FpdCBicm93c2VyLmRlYnVnKCk7XG5cbiAgICBjb25zdCBhY3R1YWxIZWFkZXIgPSBhd2FpdCBjbGlja1BhZ2VUZXh0LmdldFRleHQoKTtcbiAgICBhc3NlcnQuZXF1YWwoYWN0dWFsSGVhZGVyLGtleXdvcmQsJ1BhZ2UgaGVhZGVyIGlzIGluY29ycmVjdCcpO1xuXG59KTtcblxuVGhlbigvXnRoZSB1c2VyIGNsaWNrcyB0aGUgXCIoLiopXCIgQnV0dG9uJC8sIGFzeW5jIChrZXl3b3JkKSA9PiB7XG4gICAgXG4gICAgYXdhaXQgYmFkQnV0dG9uLmNsaWNrKCk7XG4gICAgY29uc3QgbmV3QnV0dG9uID0gJChcIi4vL2J1dHRvbltAY2xhc3M9J2J0biBidG4tc3VjY2VzcyddXCIpO1xuICAgIGF3YWl0IG5ld0J1dHRvbi53YWl0Rm9yRGlzcGxheWVkKDIwMDApOyAgICBcbiAgICBjb25zdCBidG5Db2xvciA9IGF3YWl0IGJhZEJ1dHRvbi5nZXRDU1NQcm9wZXJ0eSgnYmFja2dyb3VuZC1jb2xvcicpO1xuXG4gICAgY29uc3QgYnRuQ29sID0gSlNPTi5zdHJpbmdpZnkoYnRuQ29sb3IpO1xuICAgIHZhciBidG5Db2xvclRleHQgPSBKU09OLnBhcnNlKGJ0bkNvbCk7XG5cbiAgICBjb25zb2xlLmxvZyhcImFjdHVhbCBidXR0b24gY29sb3IgPSBcIiArIGJ0bkNvbG9yVGV4dC52YWx1ZSk7XG4gICAgLy9jb25zb2xlLmxvZyhcImFjdHVhbCBidXR0b24gY29sb3IgPSBcIiArIGJ0bkNvbCk7XG5cbiAgICBjb25zdCBleHBlY3RlZEJ0bkNvbG9yID0gXCJycmdiYSgwLDEyMywyNTUsMSlcIjtcbiAgICBjb25zdCBhY3R1YWxCdG5Db2xvciA9IGJ0bkNvbG9yVGV4dC52YWx1ZTtcbiAgICBhc3NlcnQuZXF1YWwoYWN0dWFsQnRuQ29sb3IsZXhwZWN0ZWRCdG5Db2xvciwnRXhwZWN0ZWQgQnV0dG9uIGNvbG9yID0gJyArIGV4cGVjdGVkQnRuQ29sb3IsICdBY3R1YWwgYnV0dG9uIGNvbG9yID0gJyArIGFjdHVhbEJ0bkNvbG9yKTtcblxufSk7XG5cbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQSxLQUFGO0VBQVNDLElBQVQ7RUFBZUM7QUFBZixJQUF3QkMsT0FBTyxDQUFDLDBCQUFELENBQXJDLEMsQ0FFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUEsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNRSxNQUFNLEdBQUdELElBQUksQ0FBQ0MsTUFBcEI7QUFFQSxNQUFNQyxTQUFTLEdBQUdDLENBQUMsQ0FBQyxzQkFBRCxDQUFuQjtBQUNBLE1BQU1DLGFBQWEsR0FBR0QsQ0FBQyxDQUFDLE9BQUQsQ0FBdkI7QUFDQSxNQUFNRSxhQUFhLEdBQUdGLENBQUMsQ0FBQyxPQUFELENBQXZCO0FBQ0EsTUFBTUcsU0FBUyxHQUFHSCxDQUFDLENBQUMsNEJBQUQsQ0FBbkI7QUFJQVAsS0FBSyxDQUFDLHFDQUFELEVBQXdDLFlBQVU7RUFDbkQsTUFBTVcsT0FBTyxDQUFDQyxHQUFSLENBQVksR0FBWixDQUFOO0VBQ0EsTUFBTUQsT0FBTyxDQUFDRSxjQUFSLEVBQU47RUFFQSxJQUFJQyxZQUFZLEdBQUcsTUFBTUwsYUFBYSxDQUFDTSxPQUFkLEVBQXpCO0VBQ0EsSUFBSUQsWUFBWSxHQUFHLE1BQU1BLFlBQVksQ0FBQ0UsT0FBYixDQUFxQixnQkFBckIsRUFBdUMsR0FBdkMsQ0FBekIsQ0FMbUQsQ0FNbkQ7O0VBQ0FYLE1BQU0sQ0FBQ1ksS0FBUCxDQUFhSCxZQUFiLEVBQTBCLCtCQUExQixFQUEwRCwwQkFBMUQ7QUFFSCxDQVRJLENBQUw7QUFXQVosSUFBSSxDQUFDLG1DQUFELEVBQXNDLE1BQU9nQixPQUFQLElBQW1CO0VBRXpELE1BQU1aLFNBQVMsQ0FBQ2EsS0FBVixFQUFOLENBRnlELENBR3pEOztFQUVBLE1BQU1MLFlBQVksR0FBRyxNQUFNTixhQUFhLENBQUNPLE9BQWQsRUFBM0I7RUFDQVYsTUFBTSxDQUFDWSxLQUFQLENBQWFILFlBQWIsRUFBMEJJLE9BQTFCLEVBQWtDLDBCQUFsQztBQUVILENBUkcsQ0FBSjtBQVVBaEIsSUFBSSxDQUFDLHFDQUFELEVBQXdDLE1BQU9nQixPQUFQLElBQW1CO0VBRTNELE1BQU1SLFNBQVMsQ0FBQ1MsS0FBVixFQUFOO0VBQ0EsTUFBTUMsU0FBUyxHQUFHYixDQUFDLENBQUMscUNBQUQsQ0FBbkI7RUFDQSxNQUFNYSxTQUFTLENBQUNDLGdCQUFWLENBQTJCLElBQTNCLENBQU47RUFDQSxNQUFNQyxRQUFRLEdBQUcsTUFBTVosU0FBUyxDQUFDYSxjQUFWLENBQXlCLGtCQUF6QixDQUF2QjtFQUVBLE1BQU1DLE1BQU0sR0FBR0MsSUFBSSxDQUFDQyxTQUFMLENBQWVKLFFBQWYsQ0FBZjtFQUNBLElBQUlLLFlBQVksR0FBR0YsSUFBSSxDQUFDRyxLQUFMLENBQVdKLE1BQVgsQ0FBbkI7RUFFQUssT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQTJCSCxZQUFZLENBQUNJLEtBQXBELEVBVjJELENBVzNEOztFQUVBLE1BQU1DLGdCQUFnQixHQUFHLG9CQUF6QjtFQUNBLE1BQU1DLGNBQWMsR0FBR04sWUFBWSxDQUFDSSxLQUFwQztFQUNBMUIsTUFBTSxDQUFDWSxLQUFQLENBQWFnQixjQUFiLEVBQTRCRCxnQkFBNUIsRUFBNkMsNkJBQTZCQSxnQkFBMUUsRUFBNEYsMkJBQTJCQyxjQUF2SDtBQUVILENBakJHLENBQUoifQ==","map":{"version":3,"names":["Given","When","Then","require","chai","assert","clickLink","$","clickPageText","homePageTitle","badButton","browser","url","maximizeWindow","actualHeader","getText","replace","equal","keyword","click","newButton","waitForDisplayed","btnColor","getCSSProperty","btnCol","JSON","stringify","btnColorText","parse","console","log","value","expectedBtnColor","actualBtnColor"],"sourceRoot":"F:\\VS code - projects\\webdriverio\\Task 1\\features\\step-definitions\\","sources":["steps.js"],"sourcesContent":["const { Given, When, Then } = require('@wdio/cucumber-framework');\n\n// Given(/^I am on the (\\w+) page$/, async (page) => {\n//     await browser.url(`https://the-internet.herokuapp.com/${page}`);\n// });\n\n// When(/^I login with (\\w+) and (.+)$/, async (username, password) => {\n//     await $('#username').setValue(username);\n//     await $('#password').setValue(password);\n//     await $('button[type=\"submit\"]').click();\n// });\n\n// Then(/^I should see a flash message saying (.*)$/, async (message) => {\n//     await expect($('#flash')).toBeExisting();\n//     await expect($('#flash')).toHaveTextContaining(message);\n// });\n//import { Given } from '@wdio/cucumber-framework';\n\nconst chai = require('chai');\nconst assert = chai.assert; \n\nconst clickLink = $(\".//a[text()='Click']\");\nconst clickPageText = $(\".//h3\");\nconst homePageTitle = $(\".//h1\");\nconst badButton = $(\".//button[@id='badButton']\");\n\n\n\nGiven(\"the user navigates to the home page\", async() =>{         \n    await browser.url(\"/\");\n    await browser.maximizeWindow();\n\n    var actualHeader = await homePageTitle.getText();\n    var actualHeader = await actualHeader.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n    //console.log(\"actual page header = \" + actualHeader);   \n    assert.equal(actualHeader,\"UI Test Automation Playground\",'Page header is incorrect');    \n\n});\n\nThen(/^the user clicks the \"(.*)\" link$/, async (keyword) => {\n\n    await clickLink.click();\n    //await browser.debug();\n\n    const actualHeader = await clickPageText.getText();\n    assert.equal(actualHeader,keyword,'Page header is incorrect');\n\n});\n\nThen(/^the user clicks the \"(.*)\" Button$/, async (keyword) => {\n    \n    await badButton.click();\n    const newButton = $(\".//button[@class='btn btn-success']\");\n    await newButton.waitForDisplayed(2000);    \n    const btnColor = await badButton.getCSSProperty('background-color');\n\n    const btnCol = JSON.stringify(btnColor);\n    var btnColorText = JSON.parse(btnCol);\n\n    console.log(\"actual button color = \" + btnColorText.value);\n    //console.log(\"actual button color = \" + btnCol);\n\n    const expectedBtnColor = \"rrgba(0,123,255,1)\";\n    const actualBtnColor = btnColorText.value;\n    assert.equal(actualBtnColor,expectedBtnColor,'Expected Button color = ' + expectedBtnColor, 'Actual button color = ' + actualBtnColor);\n\n});\n\n"],"mappings":"AAAA,MAAM;EAAEA,KAAF;EAASC,IAAT;EAAeC;AAAf,IAAwBC,OAAO,CAAC,0BAAD,CAArC,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,MAAM,GAAGD,IAAI,CAACC,MAApB;AAEA,MAAMC,SAAS,GAAGC,CAAC,CAAC,sBAAD,CAAnB;AACA,MAAMC,aAAa,GAAGD,CAAC,CAAC,OAAD,CAAvB;AACA,MAAME,aAAa,GAAGF,CAAC,CAAC,OAAD,CAAvB;AACA,MAAMG,SAAS,GAAGH,CAAC,CAAC,4BAAD,CAAnB;AAIAP,KAAK,CAAC,qCAAD,EAAwC,YAAU;EACnD,MAAMW,OAAO,CAACC,GAAR,CAAY,GAAZ,CAAN;EACA,MAAMD,OAAO,CAACE,cAAR,EAAN;EAEA,IAAIC,YAAY,GAAG,MAAML,aAAa,CAACM,OAAd,EAAzB;EACA,IAAID,YAAY,GAAG,MAAMA,YAAY,CAACE,OAAb,CAAqB,gBAArB,EAAuC,GAAvC,CAAzB,CALmD,CAMnD;;EACAX,MAAM,CAACY,KAAP,CAAaH,YAAb,EAA0B,+BAA1B,EAA0D,0BAA1D;AAEH,CATI,CAAL;AAWAZ,IAAI,CAAC,mCAAD,EAAsC,MAAOgB,OAAP,IAAmB;EAEzD,MAAMZ,SAAS,CAACa,KAAV,EAAN,CAFyD,CAGzD;;EAEA,MAAML,YAAY,GAAG,MAAMN,aAAa,CAACO,OAAd,EAA3B;EACAV,MAAM,CAACY,KAAP,CAAaH,YAAb,EAA0BI,OAA1B,EAAkC,0BAAlC;AAEH,CARG,CAAJ;AAUAhB,IAAI,CAAC,qCAAD,EAAwC,MAAOgB,OAAP,IAAmB;EAE3D,MAAMR,SAAS,CAACS,KAAV,EAAN;EACA,MAAMC,SAAS,GAAGb,CAAC,CAAC,qCAAD,CAAnB;EACA,MAAMa,SAAS,CAACC,gBAAV,CAA2B,IAA3B,CAAN;EACA,MAAMC,QAAQ,GAAG,MAAMZ,SAAS,CAACa,cAAV,CAAyB,kBAAzB,CAAvB;EAEA,MAAMC,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAf;EACA,IAAIK,YAAY,GAAGF,IAAI,CAACG,KAAL,CAAWJ,MAAX,CAAnB;EAEAK,OAAO,CAACC,GAAR,CAAY,2BAA2BH,YAAY,CAACI,KAApD,EAV2D,CAW3D;;EAEA,MAAMC,gBAAgB,GAAG,oBAAzB;EACA,MAAMC,cAAc,GAAGN,YAAY,CAACI,KAApC;EACA1B,MAAM,CAACY,KAAP,CAAagB,cAAb,EAA4BD,gBAA5B,EAA6C,6BAA6BA,gBAA1E,EAA4F,2BAA2BC,cAAvH;AAEH,CAjBG,CAAJ"}},"mtime":1656439957004},"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"const allure = require('allure-commandline');\n\nexports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  //\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // from which `wdio` was called.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  reporters: [['allure', {\n    outputDir: 'allure-results',\n    disableWebdriverStepsReporting: true,\n    disableWebdriverScreenshotsReporting: false,\n    addConsoleLogs: true\n  }]],\n  specs: ['./features/*.feature'],\n  // Patterns to exclude.\n  exclude: [// 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n    // grid with only 5 firefox instances available you can make sure that not more than\n    // 5 instances get started at a time.\n    maxInstances: 5,\n    //\n    browserName: 'chrome',\n    acceptInsecureCerts: true // If outputDir is provided WebdriverIO can capture driver session logs\n    // it is possible to configure which logTypes to include/exclude.\n    // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n    // excludeDriverLogs: ['bugreport', 'server'],\n\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://uitestingplayground.com/',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: ['chromedriver'],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'cucumber',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  // reporters: ['dot'],\n  //\n  // If you are using Cucumber you need to specify the location of your step definitions.\n  cucumberOpts: {\n    // <string[]> (file/dir) require files before executing features\n    //require: ['./features/step-definitions/steps.js'],\n    //require: ['./step-definitions/steps.js'],\n    require: [\"./StepDefinitions/ClickPageSteps.js\", \"./StepDefinitions/HomePageSteps.js\", \"./StepDefinitions/TextInputPageSteps.js\", \"./StepDefinitions/ClientSideDelayPageSteps.js\"],\n    // <boolean> show full backtrace for errors\n    backtrace: false,\n    // <string[]> (\"extension:module\") require files with the given EXTENSION after requiring MODULE (repeatable)\n    requireModule: [],\n    // <boolean> invoke formatters without executing steps\n    dryRun: false,\n    // <boolean> abort the run on first failure\n    failFast: false,\n    // <boolean> hide step definition snippets for pending steps\n    snippets: true,\n    // <boolean> hide source uris\n    source: true,\n    // <boolean> fail if there are any undefined or pending steps\n    strict: false,\n    // <string> (expression) only execute the features or scenarios with tags matching the expression\n    tagExpression: '',\n    // <number> timeout for step definitions\n    timeout: 60000,\n    // <boolean> Enable this config to treat undefined definitions as warnings.\n    ignoreUndefinedDefinitions: true\n  },\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {[type]} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {Number} exitCode 0 - success, 1 - fail\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {Number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {String} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {Object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n\n  /**\n   * Cucumber Hooks\n   *\n   * Runs before a Cucumber Feature.\n   * @param {String}                   uri      path to feature file\n   * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n   */\n  // beforeFeature: function (uri, feature) {\n  // },\n\n  /**\n   *\n   * Runs before a Cucumber Scenario.\n   * @param {ITestCaseHookParameter} world    world object containing information on pickle and test step\n   * @param {Object}                 context  Cucumber World object\n   */\n  // beforeScenario: function (world, context) {\n  // },\n\n  /**\n   *\n   * Runs before a Cucumber Step.\n   * @param {Pickle.IPickleStep} step     step data\n   * @param {IPickle}            scenario scenario pickle\n   * @param {Object}             context  Cucumber World object\n   */\n  // beforeStep: function (step, scenario, context) {\n  // },\n\n  /**\n   *\n   * Runs after a Cucumber Step.\n   * @param {Pickle.IPickleStep} step             step data\n   * @param {IPickle}            scenario         scenario pickle\n   * @param {Object}             result           results object containing scenario results\n   * @param {boolean}            result.passed    true if scenario has passed\n   * @param {string}             result.error     error stack if scenario failed\n   * @param {number}             result.duration  duration of scenario in milliseconds\n   * @param {Object}             context          Cucumber World object\n   */\n  afterStep: function (step, scenario, {\n    error,\n    duration,\n    passed\n  }, result, context) {\n    if (error) {\n      browser.takeScreenshot();\n    }\n  },\n\n  /**\n   *\n   * Runs after a Cucumber Scenario.\n   * @param {ITestCaseHookParameter} world            world object containing information on pickle and test step\n   * @param {Object}                 result           results object containing scenario results\n   * @param {boolean}                result.passed    true if scenario has passed\n   * @param {string}                 result.error     error stack if scenario failed\n   * @param {number}                 result.duration  duration of scenario in milliseconds\n   * @param {Object}                 context          Cucumber World object\n   */\n  // afterScenario: function (world, result, context) {\n  // },\n\n  /**\n   *\n   * Runs after a Cucumber Feature.\n   * @param {String}                   uri      path to feature file\n   * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n   */\n  // afterFeature: function (uri, feature) {\n  // },\n\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {Number} result 0 - command success, 1 - command error\n   * @param {Object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {Number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {Object} exitCode 0 - success, 1 - fail\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  onComplete: function (exitCode, config, capabilities, results) {\n    const reportError = new Error('Could not generate Allure report');\n    const generation = allure(['generate', 'allure-results', '--clean']);\n    return new Promise((resolve, reject) => {\n      const generationTimeout = setTimeout(() => reject(reportError), 5000);\n      generation.on('exit', function (exitCode) {\n        clearTimeout(generationTimeout);\n\n        if (exitCode !== 0) {\n          return reject(reportError);\n        }\n\n        console.log('Allure report successfully generated');\n        resolve();\n      });\n    });\n  }\n  /**\n  * Gets executed when a refresh happens.\n  * @param {String} oldSessionId session ID of the old session\n  * @param {String} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["allure","require","exports","config","reporters","outputDir","disableWebdriverStepsReporting","disableWebdriverScreenshotsReporting","addConsoleLogs","specs","exclude","maxInstances","capabilities","browserName","acceptInsecureCerts","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","services","framework","cucumberOpts","backtrace","requireModule","dryRun","failFast","snippets","source","strict","tagExpression","timeout","ignoreUndefinedDefinitions","afterStep","step","scenario","error","duration","passed","result","context","browser","takeScreenshot","onComplete","exitCode","results","reportError","Error","generation","Promise","resolve","reject","generationTimeout","setTimeout","on","clearTimeout","console","log"],"sourceRoot":"F:\\VS Code projects\\Webdriverio\\Task 1\\","sources":["wdio.conf.js"],"sourcesContent":["const allure = require('allure-commandline');\nexports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    //\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // from which `wdio` was called.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    reporters: [['allure', {\n        outputDir: 'allure-results',\n        disableWebdriverStepsReporting: true,\n        disableWebdriverScreenshotsReporting: false,\n        addConsoleLogs : true,\n    }]],\n    specs: [\n        './features/*.feature'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n    \n        // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n        // grid with only 5 firefox instances available you can make sure that not more than\n        // 5 instances get started at a time.\n        maxInstances: 5,\n        //\n        browserName: 'chrome',\n        acceptInsecureCerts: true\n        // If outputDir is provided WebdriverIO can capture driver session logs\n        // it is possible to configure which logTypes to include/exclude.\n        // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n        // excludeDriverLogs: ['bugreport', 'server'],\n    }],\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://uitestingplayground.com/',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: ['chromedriver'],\n    \n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'cucumber',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    // reporters: ['dot'],\n\n\n    //\n    // If you are using Cucumber you need to specify the location of your step definitions.\n    cucumberOpts: {\n        // <string[]> (file/dir) require files before executing features\n        //require: ['./features/step-definitions/steps.js'],\n        //require: ['./step-definitions/steps.js'],\n        require: [\n            \"./StepDefinitions/ClickPageSteps.js\",\n            \"./StepDefinitions/HomePageSteps.js\",\n            \"./StepDefinitions/TextInputPageSteps.js\",\n            \"./StepDefinitions/ClientSideDelayPageSteps.js\"\n        ],\n        // <boolean> show full backtrace for errors\n        backtrace: false,\n        // <string[]> (\"extension:module\") require files with the given EXTENSION after requiring MODULE (repeatable)\n        requireModule: [],\n        // <boolean> invoke formatters without executing steps\n        dryRun: false,\n        // <boolean> abort the run on first failure\n        failFast: false,\n        // <boolean> hide step definition snippets for pending steps\n        snippets: true,\n        // <boolean> hide source uris\n        source: true,\n        // <boolean> fail if there are any undefined or pending steps\n        strict: false,\n        // <string> (expression) only execute the features or scenarios with tags matching the expression\n        tagExpression: '',\n        // <number> timeout for step definitions\n        timeout: 60000,\n        // <boolean> Enable this config to treat undefined definitions as warnings.\n        ignoreUndefinedDefinitions: true\n    },\n    \n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {[type]} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {[type]} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {Number} exitCode 0 - success, 1 - fail\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {Number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {String} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {Object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Cucumber Hooks\n     *\n     * Runs before a Cucumber Feature.\n     * @param {String}                   uri      path to feature file\n     * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n     */\n    // beforeFeature: function (uri, feature) {\n    // },\n    /**\n     *\n     * Runs before a Cucumber Scenario.\n     * @param {ITestCaseHookParameter} world    world object containing information on pickle and test step\n     * @param {Object}                 context  Cucumber World object\n     */\n    // beforeScenario: function (world, context) {\n    // },\n    /**\n     *\n     * Runs before a Cucumber Step.\n     * @param {Pickle.IPickleStep} step     step data\n     * @param {IPickle}            scenario scenario pickle\n     * @param {Object}             context  Cucumber World object\n     */\n    // beforeStep: function (step, scenario, context) {\n    // },\n    /**\n     *\n     * Runs after a Cucumber Step.\n     * @param {Pickle.IPickleStep} step             step data\n     * @param {IPickle}            scenario         scenario pickle\n     * @param {Object}             result           results object containing scenario results\n     * @param {boolean}            result.passed    true if scenario has passed\n     * @param {string}             result.error     error stack if scenario failed\n     * @param {number}             result.duration  duration of scenario in milliseconds\n     * @param {Object}             context          Cucumber World object\n     */\n    afterStep: function (step, scenario, { error, duration, passed }, result, context) \n    {\n        if (error) {\n             browser.takeScreenshot();\n          }\n    },\n    /**\n     *\n     * Runs after a Cucumber Scenario.\n     * @param {ITestCaseHookParameter} world            world object containing information on pickle and test step\n     * @param {Object}                 result           results object containing scenario results\n     * @param {boolean}                result.passed    true if scenario has passed\n     * @param {string}                 result.error     error stack if scenario failed\n     * @param {number}                 result.duration  duration of scenario in milliseconds\n     * @param {Object}                 context          Cucumber World object\n     */\n    // afterScenario: function (world, result, context) {\n    // },\n    /**\n     *\n     * Runs after a Cucumber Feature.\n     * @param {String}                   uri      path to feature file\n     * @param {GherkinDocument.IFeature} feature  Cucumber feature object\n     */\n    // afterFeature: function (uri, feature) {\n    // },\n    \n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {Number} result 0 - command success, 1 - command error\n     * @param {Object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {Number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {Object} exitCode 0 - success, 1 - fail\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    \n    onComplete: function(exitCode, config, capabilities, results) \n    {\n        const reportError = new Error('Could not generate Allure report')\n        const generation = allure(['generate', 'allure-results', '--clean'])\n        return new Promise((resolve, reject) => {\n            const generationTimeout = setTimeout(\n                () => reject(reportError),\n                5000)\n\n            generation.on('exit', function(exitCode) {\n                clearTimeout(generationTimeout)\n\n                if (exitCode !== 0) {\n                    return reject(reportError)\n                }\n\n                console.log('Allure report successfully generated')\n                resolve()\n            })\n        })\n    },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {String} oldSessionId session ID of the old session\n    * @param {String} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,oBAAD,CAAtB;;AACAC,OAAO,CAACC,MAAR,GAAiB;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,CAAC,QAAD,EAAW;IACnBC,SAAS,EAAE,gBADQ;IAEnBC,8BAA8B,EAAE,IAFb;IAGnBC,oCAAoC,EAAE,KAHnB;IAInBC,cAAc,EAAG;EAJE,CAAX,CAAD,CAtBE;EA4BbC,KAAK,EAAE,CACH,sBADG,CA5BM;EA+Bb;EACAC,OAAO,EAAE,CACL;EADK,CAhCI;EAmCb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAnDD;EAoDb;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IAEX;IACA;IACA;IACAD,YAAY,EAAE,CALH;IAMX;IACAE,WAAW,EAAE,QAPF;IAQXC,mBAAmB,EAAE,IARV,CASX;IACA;IACA;IACA;;EAZW,CAAD,CAzDD;EAuEb;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MA9EG;EA+Eb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAhGO;EAiGb;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,iCAtGI;EAuGb;EACA;EACAC,cAAc,EAAE,KAzGH;EA0Gb;EACA;EACA;EACAC,sBAAsB,EAAE,MA7GX;EA8Gb;EACA;EACAC,oBAAoB,EAAE,CAhHT;EAiHb;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,CAAC,cAAD,CAtHG;EAwHb;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,UA9HE;EA+Hb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACAC,YAAY,EAAE;IACV;IACA;IACA;IACAtB,OAAO,EAAE,CACL,qCADK,EAEL,oCAFK,EAGL,yCAHK,EAIL,+CAJK,CAJC;IAUV;IACAuB,SAAS,EAAE,KAXD;IAYV;IACAC,aAAa,EAAE,EAbL;IAcV;IACAC,MAAM,EAAE,KAfE;IAgBV;IACAC,QAAQ,EAAE,KAjBA;IAkBV;IACAC,QAAQ,EAAE,IAnBA;IAoBV;IACAC,MAAM,EAAE,IArBE;IAsBV;IACAC,MAAM,EAAE,KAvBE;IAwBV;IACAC,aAAa,EAAE,EAzBL;IA0BV;IACAC,OAAO,EAAE,KA3BC;IA4BV;IACAC,0BAA0B,EAAE;EA7BlB,CAjJD;EAiLb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,SAAS,EAAE,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,CAA1B,EAAuDC,MAAvD,EAA+DC,OAA/D,EACX;IACI,IAAIJ,KAAJ,EAAW;MACNK,OAAO,CAACC,cAAR;IACF;EACN,CAxRY;;EAyRb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAEIC,UAAU,EAAE,UAASC,QAAT,EAAmB1C,MAAnB,EAA2BS,YAA3B,EAAyCkC,OAAzC,EACZ;IACI,MAAMC,WAAW,GAAG,IAAIC,KAAJ,CAAU,kCAAV,CAApB;IACA,MAAMC,UAAU,GAAGjD,MAAM,CAAC,CAAC,UAAD,EAAa,gBAAb,EAA+B,SAA/B,CAAD,CAAzB;IACA,OAAO,IAAIkD,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpC,MAAMC,iBAAiB,GAAGC,UAAU,CAChC,MAAMF,MAAM,CAACL,WAAD,CADoB,EAEhC,IAFgC,CAApC;MAIAE,UAAU,CAACM,EAAX,CAAc,MAAd,EAAsB,UAASV,QAAT,EAAmB;QACrCW,YAAY,CAACH,iBAAD,CAAZ;;QAEA,IAAIR,QAAQ,KAAK,CAAjB,EAAoB;UAChB,OAAOO,MAAM,CAACL,WAAD,CAAb;QACH;;QAEDU,OAAO,CAACC,GAAR,CAAY,sCAAZ;QACAP,OAAO;MACV,CATD;IAUH,CAfM,CAAP;EAgBH;EACD;AACJ;AACA;AACA;AACA;EACI;EACA;;AA5Wa,CAAjB"}},"mtime":1656865961483},"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\features\\\\step-definitions\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\features\\\\step-definitions\\\\steps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"const {\n  Given,\n  When,\n  Then\n} = require('@wdio/cucumber-framework'); // Given(/^I am on the (\\w+) page$/, async (page) => {\n//     await browser.url(`https://the-internet.herokuapp.com/${page}`);\n// });\n// When(/^I login with (\\w+) and (.+)$/, async (username, password) => {\n//     await $('#username').setValue(username);\n//     await $('#password').setValue(password);\n//     await $('button[type=\"submit\"]').click();\n// });\n// Then(/^I should see a flash message saying (.*)$/, async (message) => {\n//     await expect($('#flash')).toBeExisting();\n//     await expect($('#flash')).toHaveTextContaining(message);\n// });\n//import { Given } from '@wdio/cucumber-framework';\n\n\nconst chai = require('chai');\n\nconst assert = chai.assert;\nconst clickPageText = $(\".//h3\");\nconst homePageTitle = $(\".//h1\");\nGiven(\"the user navigates to the home page\", async () => {\n  await browser.url(\"/\");\n  await browser.maximizeWindow();\n  var actualHeader = await homePageTitle.getText();\n  var actualHeader = await actualHeader.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n  assert.equal(actualHeader, \"UI Test Automation Playground\", 'Page header is incorrect');\n});\nThen(/^the user clicks the \"(.*)\" link$/, async keyword => {\n  const clickLink = $(\".//a[text()='\" + keyword + \"']\");\n  await clickLink.click();\n  const actualHeader = await clickPageText.getText();\n  assert.equal(actualHeader, keyword, 'Page header is incorrect');\n});\nThen(/^the user clicks the \"(.*)\" Button$/, async keyword => {\n  //const badButton = $(\".//button[text()='\" + keyword + \"']\");\n  const badButton = $(\".//button[text()='\" + keyword + \"']\");\n  await badButton.click();\n});\nThen(\"the user verifies the button color change\", async () => {\n  const newButton = $(\".//button[@class='btn btn-success']\");\n  await newButton.waitForDisplayed(2000);\n  const btnColor = await newButton.getCSSProperty('background-color');\n  const btnCol = JSON.stringify(btnColor);\n  var btnColorText = JSON.parse(btnCol);\n  console.log(\"actual button color = \" + btnColorText.value); //console.log(\"actual button color = \" + btnCol);\n\n  const expectedBtnColor = \"rgba(0,123,255,1)\";\n  const actualBtnColor = btnColorText.value;\n  assert.equal(actualBtnColor, expectedBtnColor, 'Expected Button color = ' + expectedBtnColor, 'Actual button color = ' + actualBtnColor);\n});\nThen(/^the user verifies the \"(.*)\" label$/, async text => {\n  const label = $(\".//p[@class='bg-success']\"); // await label.waitForDisplayed(15000);\n\n  function getText() {\n    const labelText = label.getText();\n    console.log(\"My label = \" + labelText); //await browser.debug();\n\n    return labelText;\n  }\n\n  try {\n    const actualText = getText(); // const labelText =  await label.getText();\n\n    console.log(\"My label = \" + actualText);\n    await browser.debug();\n    assert.equal(actualText, text, 'label text is not as expected.');\n  } catch (error) {\n    await label.waitForDisplayed(10000);\n    getText();\n  } // const labelText =  await label.getText();\n  // assert.equal(labelText,text,'label text is not as expected.');\n\n});\nconst label = $(\".//p[@class='bg-success']\");\nlet userInput;\nThen(/^the user types  \"(.*)\" in the text box$/, async text => {\n  userInput = text;\n  const textField = $(\".//input[@id='newButtonName']\");\n  await textField.setValue(text);\n});\nThen(/^the user clicks the button & verifies the button text$/, async () => {\n  const updateButton = $(\".//button[@id='updatingButton']\");\n  await updateButton.click(); //await browser.debug();\n\n  const expectedText = userInput;\n  const actualText = userInput;\n  console.log(\"button text = \" + actualText);\n  assert.equal(actualText, expectedText, 'button text is incorect!');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Given","When","Then","require","chai","assert","clickPageText","$","homePageTitle","browser","url","maximizeWindow","actualHeader","getText","replace","equal","keyword","clickLink","click","badButton","newButton","waitForDisplayed","btnColor","getCSSProperty","btnCol","JSON","stringify","btnColorText","parse","console","log","value","expectedBtnColor","actualBtnColor","text","label","labelText","actualText","debug","error","userInput","textField","setValue","updateButton","expectedText"],"sourceRoot":"F:\\VS Code projects\\Webdriverio\\Task 1\\features\\step-definitions\\","sources":["steps.js"],"sourcesContent":["const { Given, When, Then } = require('@wdio/cucumber-framework');\n\n// Given(/^I am on the (\\w+) page$/, async (page) => {\n//     await browser.url(`https://the-internet.herokuapp.com/${page}`);\n// });\n\n// When(/^I login with (\\w+) and (.+)$/, async (username, password) => {\n//     await $('#username').setValue(username);\n//     await $('#password').setValue(password);\n//     await $('button[type=\"submit\"]').click();\n// });\n\n// Then(/^I should see a flash message saying (.*)$/, async (message) => {\n//     await expect($('#flash')).toBeExisting();\n//     await expect($('#flash')).toHaveTextContaining(message);\n// });\n//import { Given } from '@wdio/cucumber-framework';\n\nconst chai = require('chai');\nconst assert = chai.assert; \n\n\nconst clickPageText = $(\".//h3\");\nconst homePageTitle = $(\".//h1\");\n\n\n\n\nGiven(\"the user navigates to the home page\", async() =>{         \n    \n    await browser.url(\"/\");\n    await browser.maximizeWindow();\n\n    var actualHeader = await homePageTitle.getText();\n    var actualHeader = await actualHeader.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n\n    assert.equal(actualHeader,\"UI Test Automation Playground\",'Page header is incorrect');    \n\n});\n\nThen(/^the user clicks the \"(.*)\" link$/, async (keyword) => {\n\n    const clickLink = $(\".//a[text()='\" + keyword + \"']\");\n    await clickLink.click();\n\n    const actualHeader = await clickPageText.getText();\n    assert.equal(actualHeader,keyword,'Page header is incorrect');\n\n});\n\nThen(/^the user clicks the \"(.*)\" Button$/, async (keyword) => {\n    \n    //const badButton = $(\".//button[text()='\" + keyword + \"']\");\n    const badButton = $(\".//button[text()='\" + keyword + \"']\");\n    await badButton.click();\n    \n});\n\n\nThen(\"the user verifies the button color change\", async() =>{         \n\n    const newButton = $(\".//button[@class='btn btn-success']\");\n    await newButton.waitForDisplayed(2000);    \n    const btnColor = await newButton.getCSSProperty('background-color');\n\n    const btnCol = JSON.stringify(btnColor);\n    var btnColorText = JSON.parse(btnCol);\n\n    console.log(\"actual button color = \" + btnColorText.value);\n    //console.log(\"actual button color = \" + btnCol);\n\n    const expectedBtnColor = \"rgba(0,123,255,1)\";\n    const actualBtnColor = btnColorText.value;\n    assert.equal(actualBtnColor,expectedBtnColor,'Expected Button color = ' + expectedBtnColor, 'Actual button color = ' + actualBtnColor);\n\n});\n\nThen(/^the user verifies the \"(.*)\" label$/, async (text) => {\n    \n     const label = $(\".//p[@class='bg-success']\");\n    // await label.waitForDisplayed(15000);\n\n\n    function getText()\n    {\n        const labelText = label.getText();\n        console.log(\"My label = \" + labelText);\n        //await browser.debug();\n        return labelText;\n    }\n\n    try {\n        \n        const actualText = getText();\n        // const labelText =  await label.getText();\n         console.log(\"My label = \" + actualText);\n        await browser.debug();\n        assert.equal(actualText,text,'label text is not as expected.');\n\n    } \n\n    catch (error) {\n        await label.waitForDisplayed(10000);\n        getText();\n    }\n\n    // const labelText =  await label.getText();\n    // assert.equal(labelText,text,'label text is not as expected.');\n    \n});\n\nconst label = $(\".//p[@class='bg-success']\");\n\nlet userInput;\n\nThen(/^the user types  \"(.*)\" in the text box$/, async (text) => {\n    \n    userInput = text;\n    const textField = $(\".//input[@id='newButtonName']\");\n    await textField.setValue(text);\n    \n});\n\n\nThen(/^the user clicks the button & verifies the button text$/, async () => {\n    \n    const updateButton = $(\".//button[@id='updatingButton']\");\n    await updateButton.click();\n    //await browser.debug();\n\n    const expectedText = userInput;\n    const actualText = userInput;\n    console.log(\"button text = \" + actualText);\n\n    assert.equal(actualText,expectedText,'button text is incorect!');\n    \n});"],"mappings":"AAAA,MAAM;EAAEA,KAAF;EAASC,IAAT;EAAeC;AAAf,IAAwBC,OAAO,CAAC,0BAAD,CAArC,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,MAAM,GAAGD,IAAI,CAACC,MAApB;AAGA,MAAMC,aAAa,GAAGC,CAAC,CAAC,OAAD,CAAvB;AACA,MAAMC,aAAa,GAAGD,CAAC,CAAC,OAAD,CAAvB;AAKAP,KAAK,CAAC,qCAAD,EAAwC,YAAU;EAEnD,MAAMS,OAAO,CAACC,GAAR,CAAY,GAAZ,CAAN;EACA,MAAMD,OAAO,CAACE,cAAR,EAAN;EAEA,IAAIC,YAAY,GAAG,MAAMJ,aAAa,CAACK,OAAd,EAAzB;EACA,IAAID,YAAY,GAAG,MAAMA,YAAY,CAACE,OAAb,CAAqB,gBAArB,EAAuC,GAAvC,CAAzB;EAEAT,MAAM,CAACU,KAAP,CAAaH,YAAb,EAA0B,+BAA1B,EAA0D,0BAA1D;AAEH,CAVI,CAAL;AAYAV,IAAI,CAAC,mCAAD,EAAsC,MAAOc,OAAP,IAAmB;EAEzD,MAAMC,SAAS,GAAGV,CAAC,CAAC,kBAAkBS,OAAlB,GAA4B,IAA7B,CAAnB;EACA,MAAMC,SAAS,CAACC,KAAV,EAAN;EAEA,MAAMN,YAAY,GAAG,MAAMN,aAAa,CAACO,OAAd,EAA3B;EACAR,MAAM,CAACU,KAAP,CAAaH,YAAb,EAA0BI,OAA1B,EAAkC,0BAAlC;AAEH,CARG,CAAJ;AAUAd,IAAI,CAAC,qCAAD,EAAwC,MAAOc,OAAP,IAAmB;EAE3D;EACA,MAAMG,SAAS,GAAGZ,CAAC,CAAC,uBAAuBS,OAAvB,GAAiC,IAAlC,CAAnB;EACA,MAAMG,SAAS,CAACD,KAAV,EAAN;AAEH,CANG,CAAJ;AASAhB,IAAI,CAAC,2CAAD,EAA8C,YAAU;EAExD,MAAMkB,SAAS,GAAGb,CAAC,CAAC,qCAAD,CAAnB;EACA,MAAMa,SAAS,CAACC,gBAAV,CAA2B,IAA3B,CAAN;EACA,MAAMC,QAAQ,GAAG,MAAMF,SAAS,CAACG,cAAV,CAAyB,kBAAzB,CAAvB;EAEA,MAAMC,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAf;EACA,IAAIK,YAAY,GAAGF,IAAI,CAACG,KAAL,CAAWJ,MAAX,CAAnB;EAEAK,OAAO,CAACC,GAAR,CAAY,2BAA2BH,YAAY,CAACI,KAApD,EATwD,CAUxD;;EAEA,MAAMC,gBAAgB,GAAG,mBAAzB;EACA,MAAMC,cAAc,GAAGN,YAAY,CAACI,KAApC;EACA1B,MAAM,CAACU,KAAP,CAAakB,cAAb,EAA4BD,gBAA5B,EAA6C,6BAA6BA,gBAA1E,EAA4F,2BAA2BC,cAAvH;AAEH,CAhBG,CAAJ;AAkBA/B,IAAI,CAAC,sCAAD,EAAyC,MAAOgC,IAAP,IAAgB;EAExD,MAAMC,KAAK,GAAG5B,CAAC,CAAC,2BAAD,CAAf,CAFwD,CAGzD;;EAGA,SAASM,OAAT,GACA;IACI,MAAMuB,SAAS,GAAGD,KAAK,CAACtB,OAAN,EAAlB;IACAgB,OAAO,CAACC,GAAR,CAAY,gBAAgBM,SAA5B,EAFJ,CAGI;;IACA,OAAOA,SAAP;EACH;;EAED,IAAI;IAEA,MAAMC,UAAU,GAAGxB,OAAO,EAA1B,CAFA,CAGA;;IACCgB,OAAO,CAACC,GAAR,CAAY,gBAAgBO,UAA5B;IACD,MAAM5B,OAAO,CAAC6B,KAAR,EAAN;IACAjC,MAAM,CAACU,KAAP,CAAasB,UAAb,EAAwBH,IAAxB,EAA6B,gCAA7B;EAEH,CARD,CAUA,OAAOK,KAAP,EAAc;IACV,MAAMJ,KAAK,CAACd,gBAAN,CAAuB,KAAvB,CAAN;IACAR,OAAO;EACV,CA3BwD,CA6BzD;EACA;;AAEH,CAhCG,CAAJ;AAkCA,MAAMsB,KAAK,GAAG5B,CAAC,CAAC,2BAAD,CAAf;AAEA,IAAIiC,SAAJ;AAEAtC,IAAI,CAAC,0CAAD,EAA6C,MAAOgC,IAAP,IAAgB;EAE7DM,SAAS,GAAGN,IAAZ;EACA,MAAMO,SAAS,GAAGlC,CAAC,CAAC,+BAAD,CAAnB;EACA,MAAMkC,SAAS,CAACC,QAAV,CAAmBR,IAAnB,CAAN;AAEH,CANG,CAAJ;AASAhC,IAAI,CAAC,yDAAD,EAA4D,YAAY;EAExE,MAAMyC,YAAY,GAAGpC,CAAC,CAAC,iCAAD,CAAtB;EACA,MAAMoC,YAAY,CAACzB,KAAb,EAAN,CAHwE,CAIxE;;EAEA,MAAM0B,YAAY,GAAGJ,SAArB;EACA,MAAMH,UAAU,GAAGG,SAAnB;EACAX,OAAO,CAACC,GAAR,CAAY,mBAAmBO,UAA/B;EAEAhC,MAAM,CAACU,KAAP,CAAasB,UAAb,EAAwBO,YAAxB,EAAqC,0BAArC;AAEH,CAZG,CAAJ"}},"mtime":1656769975655},"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\step-definitions\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\step-definitions\\\\steps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"const {\n  Given,\n  When,\n  Then\n} = require('@wdio/cucumber-framework'); // Given(/^I am on the (\\w+) page$/, async (page) => {\n//     await browser.url(`https://the-internet.herokuapp.com/${page}`);\n// });\n// When(/^I login with (\\w+) and (.+)$/, async (username, password) => {\n//     await $('#username').setValue(username);\n//     await $('#password').setValue(password);\n//     await $('button[type=\"submit\"]').click();\n// });\n// Then(/^I should see a flash message saying (.*)$/, async (message) => {\n//     await expect($('#flash')).toBeExisting();\n//     await expect($('#flash')).toHaveTextContaining(message);\n// });\n//import { Given } from '@wdio/cucumber-framework';\n\n\nconst chai = require('chai');\n\nconst assert = chai.assert;\nconst clickPageText = $(\".//h3\");\nconst homePageTitle = $(\".//h1\");\nGiven(\"the user navigates to the home page\", async () => {\n  await browser.url(\"/\");\n  await browser.maximizeWindow();\n  var actualHeader = await homePageTitle.getText();\n  var actualHeader = await actualHeader.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n  assert.equal(actualHeader, \"UI Test Automation Playground\", 'Page header is incorrect');\n});\nThen(/^the user clicks the \"(.*)\" link$/, async keyword => {\n  const clickLink = $(\".//a[text()='\" + keyword + \"']\");\n  await clickLink.click();\n  const actualHeader = await clickPageText.getText();\n  assert.equal(actualHeader, keyword, 'Page header is incorrect');\n});\nThen(/^the user clicks the \"(.*)\" Button$/, async keyword => {\n  //const badButton = $(\".//button[text()='\" + keyword + \"']\");\n  const badButton = $(\".//button[text()='\" + keyword + \"']\");\n  await badButton.click();\n});\nThen(\"the user verifies the button color change\", async () => {\n  const newButton = $(\".//button[@class='btn btn-success']\"); //await newButton.click();\n  //await newButton.waitForDisplayed(5000);    \n\n  const btnColor = await newButton.getCSSProperty('background-color'); //const btnColor = await newButton.getCSSProperty('background');\n\n  const btnCol = JSON.stringify(btnColor);\n  var btnColorText = JSON.parse(btnCol); // btnColorText = btnColorText.replace(/^rgba?\\(|\\s+|\\)$/g, '').split(',');\n  // const hex = `#${((1 << 24) + (parseInt(btnColorText[0]) << 16) + (parseInt(btnColorText[1]) << 8) + parseInt(btnColorText[2])).toString(16).slice(1)}`;\n  // console.log(\"color in hex = \" + hex);\n\n  console.log(\"actual button color = \" + btnColorText.value); //console.log(\"actual button color = \" + btnCol);\n  //await browser.debug();\n\n  const expectedBtnColor = \"rgba(0,123,255,1)\";\n  const actualBtnColor = btnColorText.value;\n  assert.equal(actualBtnColor, expectedBtnColor, 'Expected Button color = ' + expectedBtnColor, 'Actual button color = ' + actualBtnColor);\n});\nThen(/^the user verifies the \"(.*)\" label$/, async text => {\n  const label = $(\".//p[@class='bg-success']\"); // await label.waitForDisplayed(15000);\n\n  function getText() {\n    const labelText = label.getText();\n    console.log(\"My label = \" + labelText); //await browser.debug();\n\n    return labelText;\n  }\n\n  try {\n    const actualText = getText(); // const labelText =  await label.getText();\n\n    console.log(\"My label = \" + actualText);\n    await browser.debug();\n    assert.equal(actualText, text, 'label text is not as expected.');\n  } catch (error) {\n    await label.waitForDisplayed(10000);\n    getText();\n  } // const labelText =  await label.getText();\n  // assert.equal(labelText,text,'label text is not as expected.');\n\n});\nconst label = $(\".//p[@class='bg-success']\");\nlet userInput;\nThen(/^the user types  \"(.*)\" in the text box$/, async text => {\n  userInput = text;\n  const textField = $(\".//input[@id='newButtonName']\");\n  await textField.setValue(text);\n});\nThen(/^the user clicks the button & verifies the button text$/, async () => {\n  const updateButton = $(\".//button[@id='updatingButton']\");\n  await updateButton.click(); //await browser.debug();\n\n  const expectedText = userInput;\n  const actualText = userInput; //console.log(\"button text = \" + actualText);\n\n  assert.equal(actualText, expectedText, 'button text is incorect!');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Given","When","Then","require","chai","assert","clickPageText","$","homePageTitle","browser","url","maximizeWindow","actualHeader","getText","replace","equal","keyword","clickLink","click","badButton","newButton","btnColor","getCSSProperty","btnCol","JSON","stringify","btnColorText","parse","console","log","value","expectedBtnColor","actualBtnColor","text","label","labelText","actualText","debug","error","waitForDisplayed","userInput","textField","setValue","updateButton","expectedText"],"sourceRoot":"F:\\VS Code projects\\Webdriverio\\Task 1\\step-definitions\\","sources":["steps.js"],"sourcesContent":["const { Given, When, Then } = require('@wdio/cucumber-framework');\n\n// Given(/^I am on the (\\w+) page$/, async (page) => {\n//     await browser.url(`https://the-internet.herokuapp.com/${page}`);\n// });\n\n// When(/^I login with (\\w+) and (.+)$/, async (username, password) => {\n//     await $('#username').setValue(username);\n//     await $('#password').setValue(password);\n//     await $('button[type=\"submit\"]').click();\n// });\n\n// Then(/^I should see a flash message saying (.*)$/, async (message) => {\n//     await expect($('#flash')).toBeExisting();\n//     await expect($('#flash')).toHaveTextContaining(message);\n// });\n//import { Given } from '@wdio/cucumber-framework';\n\nconst chai = require('chai');\nconst assert = chai.assert; \n\n\nconst clickPageText = $(\".//h3\");\nconst homePageTitle = $(\".//h1\");\n\n\n\n\nGiven(\"the user navigates to the home page\", async() =>{         \n    \n    await browser.url(\"/\");\n    await browser.maximizeWindow();\n\n    var actualHeader = await homePageTitle.getText();\n    var actualHeader = await actualHeader.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n\n    assert.equal(actualHeader,\"UI Test Automation Playground\",'Page header is incorrect');    \n\n});\n\nThen(/^the user clicks the \"(.*)\" link$/, async (keyword) => {\n\n    const clickLink = $(\".//a[text()='\" + keyword + \"']\");\n    await clickLink.click();\n\n    const actualHeader = await clickPageText.getText();\n    assert.equal(actualHeader,keyword,'Page header is incorrect');\n\n});\n\nThen(/^the user clicks the \"(.*)\" Button$/, async (keyword) => {\n    \n    //const badButton = $(\".//button[text()='\" + keyword + \"']\");\n    const badButton = $(\".//button[text()='\" + keyword + \"']\");\n    await badButton.click();\n    \n});\n\n\nThen(\"the user verifies the button color change\", async() =>{         \n\n    const newButton = $(\".//button[@class='btn btn-success']\");\n    //await newButton.click();\n    //await newButton.waitForDisplayed(5000);    \n    const btnColor = await newButton.getCSSProperty('background-color');\n    //const btnColor = await newButton.getCSSProperty('background');\n\n    const btnCol = JSON.stringify(btnColor);\n    var btnColorText = JSON.parse(btnCol);\n    \n    // btnColorText = btnColorText.replace(/^rgba?\\(|\\s+|\\)$/g, '').split(',');\n    // const hex = `#${((1 << 24) + (parseInt(btnColorText[0]) << 16) + (parseInt(btnColorText[1]) << 8) + parseInt(btnColorText[2])).toString(16).slice(1)}`;\n    // console.log(\"color in hex = \" + hex);\n\n\n\n\n\n    console.log(\"actual button color = \" + btnColorText.value);\n    //console.log(\"actual button color = \" + btnCol);\n    //await browser.debug();\n\n\n    const expectedBtnColor = \"rgba(0,123,255,1)\";\n    const actualBtnColor = btnColorText.value;\n    assert.equal(actualBtnColor,expectedBtnColor,'Expected Button color = ' + expectedBtnColor, 'Actual button color = ' + actualBtnColor);\n\n});\n\nThen(/^the user verifies the \"(.*)\" label$/, async (text) => {\n    \n     const label = $(\".//p[@class='bg-success']\");\n    // await label.waitForDisplayed(15000);\n\n\n    function getText()\n    {\n        const labelText = label.getText();\n        console.log(\"My label = \" + labelText);\n        //await browser.debug();\n        return labelText;\n    }\n\n    try {\n        \n        const actualText = getText();\n        // const labelText =  await label.getText();\n         console.log(\"My label = \" + actualText);\n        await browser.debug();\n        assert.equal(actualText,text,'label text is not as expected.');\n\n    } \n\n    catch (error) {\n        await label.waitForDisplayed(10000);\n        getText();\n    }\n\n    // const labelText =  await label.getText();\n    // assert.equal(labelText,text,'label text is not as expected.');\n    \n});\n\nconst label = $(\".//p[@class='bg-success']\");\n\nlet userInput;\n\nThen(/^the user types  \"(.*)\" in the text box$/, async (text) => {\n    \n    userInput = text;\n    const textField = $(\".//input[@id='newButtonName']\");\n    await textField.setValue(text);\n    \n});\n\n\nThen(/^the user clicks the button & verifies the button text$/, async () => {\n    \n    const updateButton = $(\".//button[@id='updatingButton']\");\n    await updateButton.click();\n    //await browser.debug();\n\n    const expectedText = userInput;\n    const actualText = userInput;\n    //console.log(\"button text = \" + actualText);\n\n    assert.equal(actualText,expectedText,'button text is incorect!');\n    \n});"],"mappings":"AAAA,MAAM;EAAEA,KAAF;EAASC,IAAT;EAAeC;AAAf,IAAwBC,OAAO,CAAC,0BAAD,CAArC,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,MAAM,GAAGD,IAAI,CAACC,MAApB;AAGA,MAAMC,aAAa,GAAGC,CAAC,CAAC,OAAD,CAAvB;AACA,MAAMC,aAAa,GAAGD,CAAC,CAAC,OAAD,CAAvB;AAKAP,KAAK,CAAC,qCAAD,EAAwC,YAAU;EAEnD,MAAMS,OAAO,CAACC,GAAR,CAAY,GAAZ,CAAN;EACA,MAAMD,OAAO,CAACE,cAAR,EAAN;EAEA,IAAIC,YAAY,GAAG,MAAMJ,aAAa,CAACK,OAAd,EAAzB;EACA,IAAID,YAAY,GAAG,MAAMA,YAAY,CAACE,OAAb,CAAqB,gBAArB,EAAuC,GAAvC,CAAzB;EAEAT,MAAM,CAACU,KAAP,CAAaH,YAAb,EAA0B,+BAA1B,EAA0D,0BAA1D;AAEH,CAVI,CAAL;AAYAV,IAAI,CAAC,mCAAD,EAAsC,MAAOc,OAAP,IAAmB;EAEzD,MAAMC,SAAS,GAAGV,CAAC,CAAC,kBAAkBS,OAAlB,GAA4B,IAA7B,CAAnB;EACA,MAAMC,SAAS,CAACC,KAAV,EAAN;EAEA,MAAMN,YAAY,GAAG,MAAMN,aAAa,CAACO,OAAd,EAA3B;EACAR,MAAM,CAACU,KAAP,CAAaH,YAAb,EAA0BI,OAA1B,EAAkC,0BAAlC;AAEH,CARG,CAAJ;AAUAd,IAAI,CAAC,qCAAD,EAAwC,MAAOc,OAAP,IAAmB;EAE3D;EACA,MAAMG,SAAS,GAAGZ,CAAC,CAAC,uBAAuBS,OAAvB,GAAiC,IAAlC,CAAnB;EACA,MAAMG,SAAS,CAACD,KAAV,EAAN;AAEH,CANG,CAAJ;AASAhB,IAAI,CAAC,2CAAD,EAA8C,YAAU;EAExD,MAAMkB,SAAS,GAAGb,CAAC,CAAC,qCAAD,CAAnB,CAFwD,CAGxD;EACA;;EACA,MAAMc,QAAQ,GAAG,MAAMD,SAAS,CAACE,cAAV,CAAyB,kBAAzB,CAAvB,CALwD,CAMxD;;EAEA,MAAMC,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAf;EACA,IAAIK,YAAY,GAAGF,IAAI,CAACG,KAAL,CAAWJ,MAAX,CAAnB,CATwD,CAWxD;EACA;EACA;;EAMAK,OAAO,CAACC,GAAR,CAAY,2BAA2BH,YAAY,CAACI,KAApD,EAnBwD,CAoBxD;EACA;;EAGA,MAAMC,gBAAgB,GAAG,mBAAzB;EACA,MAAMC,cAAc,GAAGN,YAAY,CAACI,KAApC;EACAzB,MAAM,CAACU,KAAP,CAAaiB,cAAb,EAA4BD,gBAA5B,EAA6C,6BAA6BA,gBAA1E,EAA4F,2BAA2BC,cAAvH;AAEH,CA5BG,CAAJ;AA8BA9B,IAAI,CAAC,sCAAD,EAAyC,MAAO+B,IAAP,IAAgB;EAExD,MAAMC,KAAK,GAAG3B,CAAC,CAAC,2BAAD,CAAf,CAFwD,CAGzD;;EAGA,SAASM,OAAT,GACA;IACI,MAAMsB,SAAS,GAAGD,KAAK,CAACrB,OAAN,EAAlB;IACAe,OAAO,CAACC,GAAR,CAAY,gBAAgBM,SAA5B,EAFJ,CAGI;;IACA,OAAOA,SAAP;EACH;;EAED,IAAI;IAEA,MAAMC,UAAU,GAAGvB,OAAO,EAA1B,CAFA,CAGA;;IACCe,OAAO,CAACC,GAAR,CAAY,gBAAgBO,UAA5B;IACD,MAAM3B,OAAO,CAAC4B,KAAR,EAAN;IACAhC,MAAM,CAACU,KAAP,CAAaqB,UAAb,EAAwBH,IAAxB,EAA6B,gCAA7B;EAEH,CARD,CAUA,OAAOK,KAAP,EAAc;IACV,MAAMJ,KAAK,CAACK,gBAAN,CAAuB,KAAvB,CAAN;IACA1B,OAAO;EACV,CA3BwD,CA6BzD;EACA;;AAEH,CAhCG,CAAJ;AAkCA,MAAMqB,KAAK,GAAG3B,CAAC,CAAC,2BAAD,CAAf;AAEA,IAAIiC,SAAJ;AAEAtC,IAAI,CAAC,0CAAD,EAA6C,MAAO+B,IAAP,IAAgB;EAE7DO,SAAS,GAAGP,IAAZ;EACA,MAAMQ,SAAS,GAAGlC,CAAC,CAAC,+BAAD,CAAnB;EACA,MAAMkC,SAAS,CAACC,QAAV,CAAmBT,IAAnB,CAAN;AAEH,CANG,CAAJ;AASA/B,IAAI,CAAC,yDAAD,EAA4D,YAAY;EAExE,MAAMyC,YAAY,GAAGpC,CAAC,CAAC,iCAAD,CAAtB;EACA,MAAMoC,YAAY,CAACzB,KAAb,EAAN,CAHwE,CAIxE;;EAEA,MAAM0B,YAAY,GAAGJ,SAArB;EACA,MAAMJ,UAAU,GAAGI,SAAnB,CAPwE,CAQxE;;EAEAnC,MAAM,CAACU,KAAP,CAAaqB,UAAb,EAAwBQ,YAAxB,EAAqC,0BAArC;AAEH,CAZG,CAAJ"}},"mtime":1656778383474},"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\step-definitions\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\step-definitions\\\\ClickPageSteps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"const {\n  Given,\n  When,\n  Then\n} = require('@wdio/cucumber-framework');\n\nconst chai = require('chai');\n\nconst assert = chai.assert; // Then the user verifies the button color change\n\nThen(\"the user verifies the button color change\", async () => {\n  const newButton = $(\".//button[@class='btn btn-success']\");\n  await newButton.waitForDisplayed(2000);\n  const btnColor = await newButton.getCSSProperty('background-color');\n  const btnCol = JSON.stringify(btnColor);\n  var btnColorText = JSON.parse(btnCol);\n  console.log(\"actual button color = \" + btnColorText.value); //console.log(\"actual button color = \" + btnCol);\n\n  const expectedBtnColor = \"rgba(0,123,255,1)\";\n  const actualBtnColor = btnColorText.value;\n  assert.equal(actualBtnColor, expectedBtnColor, 'Expected Button color = ' + expectedBtnColor, 'Actual button color = ' + actualBtnColor);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHaXZlbiIsIldoZW4iLCJUaGVuIiwicmVxdWlyZSIsImNoYWkiLCJhc3NlcnQiLCJuZXdCdXR0b24iLCIkIiwid2FpdEZvckRpc3BsYXllZCIsImJ0bkNvbG9yIiwiZ2V0Q1NTUHJvcGVydHkiLCJidG5Db2wiLCJKU09OIiwic3RyaW5naWZ5IiwiYnRuQ29sb3JUZXh0IiwicGFyc2UiLCJjb25zb2xlIiwibG9nIiwidmFsdWUiLCJleHBlY3RlZEJ0bkNvbG9yIiwiYWN0dWFsQnRuQ29sb3IiLCJlcXVhbCJdLCJzb3VyY2VSb290IjoiRjpcXFZTIENvZGUgcHJvamVjdHNcXFdlYmRyaXZlcmlvXFxUYXNrIDFcXHN0ZXAtZGVmaW5pdGlvbnNcXCIsInNvdXJjZXMiOlsiQ2xpY2tQYWdlU3RlcHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBHaXZlbiwgV2hlbiwgVGhlbiB9ID0gcmVxdWlyZSgnQHdkaW8vY3VjdW1iZXItZnJhbWV3b3JrJyk7XHJcblxyXG5jb25zdCBjaGFpID0gcmVxdWlyZSgnY2hhaScpO1xyXG5jb25zdCBhc3NlcnQgPSBjaGFpLmFzc2VydDsgXHJcblxyXG4vLyBUaGVuIHRoZSB1c2VyIHZlcmlmaWVzIHRoZSBidXR0b24gY29sb3IgY2hhbmdlXHJcblRoZW4oXCJ0aGUgdXNlciB2ZXJpZmllcyB0aGUgYnV0dG9uIGNvbG9yIGNoYW5nZVwiLCBhc3luYygpID0+eyAgICAgICAgIFxyXG5cclxuICAgIGNvbnN0IG5ld0J1dHRvbiA9ICQoXCIuLy9idXR0b25bQGNsYXNzPSdidG4gYnRuLXN1Y2Nlc3MnXVwiKTtcclxuICAgIGF3YWl0IG5ld0J1dHRvbi53YWl0Rm9yRGlzcGxheWVkKDIwMDApOyAgICBcclxuICAgIGNvbnN0IGJ0bkNvbG9yID0gYXdhaXQgbmV3QnV0dG9uLmdldENTU1Byb3BlcnR5KCdiYWNrZ3JvdW5kLWNvbG9yJyk7XHJcblxyXG4gICAgY29uc3QgYnRuQ29sID0gSlNPTi5zdHJpbmdpZnkoYnRuQ29sb3IpO1xyXG4gICAgdmFyIGJ0bkNvbG9yVGV4dCA9IEpTT04ucGFyc2UoYnRuQ29sKTtcclxuXHJcbiAgICBjb25zb2xlLmxvZyhcImFjdHVhbCBidXR0b24gY29sb3IgPSBcIiArIGJ0bkNvbG9yVGV4dC52YWx1ZSk7XHJcbiAgICAvL2NvbnNvbGUubG9nKFwiYWN0dWFsIGJ1dHRvbiBjb2xvciA9IFwiICsgYnRuQ29sKTtcclxuXHJcbiAgICBjb25zdCBleHBlY3RlZEJ0bkNvbG9yID0gXCJyZ2JhKDAsMTIzLDI1NSwxKVwiO1xyXG4gICAgY29uc3QgYWN0dWFsQnRuQ29sb3IgPSBidG5Db2xvclRleHQudmFsdWU7XHJcbiAgICBhc3NlcnQuZXF1YWwoYWN0dWFsQnRuQ29sb3IsZXhwZWN0ZWRCdG5Db2xvciwnRXhwZWN0ZWQgQnV0dG9uIGNvbG9yID0gJyArIGV4cGVjdGVkQnRuQ29sb3IsICdBY3R1YWwgYnV0dG9uIGNvbG9yID0gJyArIGFjdHVhbEJ0bkNvbG9yKTtcclxuXHJcbn0pOyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQSxLQUFGO0VBQVNDLElBQVQ7RUFBZUM7QUFBZixJQUF3QkMsT0FBTyxDQUFDLDBCQUFELENBQXJDOztBQUVBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUUsTUFBTSxHQUFHRCxJQUFJLENBQUNDLE1BQXBCLEMsQ0FFQTs7QUFDQUgsSUFBSSxDQUFDLDJDQUFELEVBQThDLFlBQVU7RUFFeEQsTUFBTUksU0FBUyxHQUFHQyxDQUFDLENBQUMscUNBQUQsQ0FBbkI7RUFDQSxNQUFNRCxTQUFTLENBQUNFLGdCQUFWLENBQTJCLElBQTNCLENBQU47RUFDQSxNQUFNQyxRQUFRLEdBQUcsTUFBTUgsU0FBUyxDQUFDSSxjQUFWLENBQXlCLGtCQUF6QixDQUF2QjtFQUVBLE1BQU1DLE1BQU0sR0FBR0MsSUFBSSxDQUFDQyxTQUFMLENBQWVKLFFBQWYsQ0FBZjtFQUNBLElBQUlLLFlBQVksR0FBR0YsSUFBSSxDQUFDRyxLQUFMLENBQVdKLE1BQVgsQ0FBbkI7RUFFQUssT0FBTyxDQUFDQyxHQUFSLENBQVksMkJBQTJCSCxZQUFZLENBQUNJLEtBQXBELEVBVHdELENBVXhEOztFQUVBLE1BQU1DLGdCQUFnQixHQUFHLG1CQUF6QjtFQUNBLE1BQU1DLGNBQWMsR0FBR04sWUFBWSxDQUFDSSxLQUFwQztFQUNBYixNQUFNLENBQUNnQixLQUFQLENBQWFELGNBQWIsRUFBNEJELGdCQUE1QixFQUE2Qyw2QkFBNkJBLGdCQUExRSxFQUE0RiwyQkFBMkJDLGNBQXZIO0FBRUgsQ0FoQkcsQ0FBSiJ9","map":{"version":3,"names":["Given","When","Then","require","chai","assert","newButton","$","waitForDisplayed","btnColor","getCSSProperty","btnCol","JSON","stringify","btnColorText","parse","console","log","value","expectedBtnColor","actualBtnColor","equal"],"sourceRoot":"F:\\VS Code projects\\Webdriverio\\Task 1\\step-definitions\\","sources":["ClickPageSteps.js"],"sourcesContent":["const { Given, When, Then } = require('@wdio/cucumber-framework');\r\n\r\nconst chai = require('chai');\r\nconst assert = chai.assert; \r\n\r\n// Then the user verifies the button color change\r\nThen(\"the user verifies the button color change\", async() =>{         \r\n\r\n    const newButton = $(\".//button[@class='btn btn-success']\");\r\n    await newButton.waitForDisplayed(2000);    \r\n    const btnColor = await newButton.getCSSProperty('background-color');\r\n\r\n    const btnCol = JSON.stringify(btnColor);\r\n    var btnColorText = JSON.parse(btnCol);\r\n\r\n    console.log(\"actual button color = \" + btnColorText.value);\r\n    //console.log(\"actual button color = \" + btnCol);\r\n\r\n    const expectedBtnColor = \"rgba(0,123,255,1)\";\r\n    const actualBtnColor = btnColorText.value;\r\n    assert.equal(actualBtnColor,expectedBtnColor,'Expected Button color = ' + expectedBtnColor, 'Actual button color = ' + actualBtnColor);\r\n\r\n});"],"mappings":"AAAA,MAAM;EAAEA,KAAF;EAASC,IAAT;EAAeC;AAAf,IAAwBC,OAAO,CAAC,0BAAD,CAArC;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,MAAM,GAAGD,IAAI,CAACC,MAApB,C,CAEA;;AACAH,IAAI,CAAC,2CAAD,EAA8C,YAAU;EAExD,MAAMI,SAAS,GAAGC,CAAC,CAAC,qCAAD,CAAnB;EACA,MAAMD,SAAS,CAACE,gBAAV,CAA2B,IAA3B,CAAN;EACA,MAAMC,QAAQ,GAAG,MAAMH,SAAS,CAACI,cAAV,CAAyB,kBAAzB,CAAvB;EAEA,MAAMC,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAf;EACA,IAAIK,YAAY,GAAGF,IAAI,CAACG,KAAL,CAAWJ,MAAX,CAAnB;EAEAK,OAAO,CAACC,GAAR,CAAY,2BAA2BH,YAAY,CAACI,KAApD,EATwD,CAUxD;;EAEA,MAAMC,gBAAgB,GAAG,mBAAzB;EACA,MAAMC,cAAc,GAAGN,YAAY,CAACI,KAApC;EACAb,MAAM,CAACgB,KAAP,CAAaD,cAAb,EAA4BD,gBAA5B,EAA6C,6BAA6BA,gBAA1E,EAA4F,2BAA2BC,cAAvH;AAEH,CAhBG,CAAJ"}},"mtime":1656855932680},"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\step-definitions\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\step-definitions\\\\ClientSideDelayPageSteps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"const {\n  Then\n} = require('@wdio/cucumber-framework');\n\nconst chai = require('chai');\n\nconst assert = chai.assert; //Then the user verifies the \"Data calculated on the client side.\" label\n\nThen(/^the user verifies the \"(.*)\" label$/, async text => {\n  const label = $(\".//p[@class='bg-success']\"); // await label.waitForDisplayed(15000);\n\n  function getText() {\n    const labelText = label.getText();\n    console.log(\"My label = \" + labelText); //await browser.debug();\n\n    return labelText;\n  }\n\n  try {\n    const actualText = getText(); // const labelText =  await label.getText();\n\n    console.log(\"My label = \" + actualText);\n    await browser.debug();\n    assert.equal(actualText, text, 'label text is not as expected.');\n  } catch (error) {\n    await label.waitForDisplayed(10000);\n    getText();\n  } // const labelText =  await label.getText();\n  // assert.equal(labelText,text,'label text is not as expected.');\n\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUaGVuIiwicmVxdWlyZSIsImNoYWkiLCJhc3NlcnQiLCJ0ZXh0IiwibGFiZWwiLCIkIiwiZ2V0VGV4dCIsImxhYmVsVGV4dCIsImNvbnNvbGUiLCJsb2ciLCJhY3R1YWxUZXh0IiwiYnJvd3NlciIsImRlYnVnIiwiZXF1YWwiLCJlcnJvciIsIndhaXRGb3JEaXNwbGF5ZWQiXSwic291cmNlUm9vdCI6IkY6XFxWUyBDb2RlIHByb2plY3RzXFxXZWJkcml2ZXJpb1xcVGFzayAxXFxzdGVwLWRlZmluaXRpb25zXFwiLCJzb3VyY2VzIjpbIkNsaWVudFNpZGVEZWxheVBhZ2VTdGVwcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IFRoZW4gfSA9IHJlcXVpcmUoJ0B3ZGlvL2N1Y3VtYmVyLWZyYW1ld29yaycpO1xyXG5cclxuY29uc3QgY2hhaSA9IHJlcXVpcmUoJ2NoYWknKTtcclxuY29uc3QgYXNzZXJ0ID0gY2hhaS5hc3NlcnQ7IFxyXG5cclxuLy9UaGVuIHRoZSB1c2VyIHZlcmlmaWVzIHRoZSBcIkRhdGEgY2FsY3VsYXRlZCBvbiB0aGUgY2xpZW50IHNpZGUuXCIgbGFiZWxcclxuVGhlbigvXnRoZSB1c2VyIHZlcmlmaWVzIHRoZSBcIiguKilcIiBsYWJlbCQvLCBhc3luYyAodGV4dCkgPT4ge1xyXG4gICAgXHJcbiAgICAgY29uc3QgbGFiZWwgPSAkKFwiLi8vcFtAY2xhc3M9J2JnLXN1Y2Nlc3MnXVwiKTtcclxuICAgIC8vIGF3YWl0IGxhYmVsLndhaXRGb3JEaXNwbGF5ZWQoMTUwMDApO1xyXG5cclxuXHJcbiAgICBmdW5jdGlvbiBnZXRUZXh0KClcclxuICAgIHtcclxuICAgICAgICBjb25zdCBsYWJlbFRleHQgPSBsYWJlbC5nZXRUZXh0KCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJNeSBsYWJlbCA9IFwiICsgbGFiZWxUZXh0KTtcclxuICAgICAgICAvL2F3YWl0IGJyb3dzZXIuZGVidWcoKTtcclxuICAgICAgICByZXR1cm4gbGFiZWxUZXh0O1xyXG4gICAgfVxyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgYWN0dWFsVGV4dCA9IGdldFRleHQoKTtcclxuICAgICAgICAvLyBjb25zdCBsYWJlbFRleHQgPSAgYXdhaXQgbGFiZWwuZ2V0VGV4dCgpO1xyXG4gICAgICAgICBjb25zb2xlLmxvZyhcIk15IGxhYmVsID0gXCIgKyBhY3R1YWxUZXh0KTtcclxuICAgICAgICBhd2FpdCBicm93c2VyLmRlYnVnKCk7XHJcbiAgICAgICAgYXNzZXJ0LmVxdWFsKGFjdHVhbFRleHQsdGV4dCwnbGFiZWwgdGV4dCBpcyBub3QgYXMgZXhwZWN0ZWQuJyk7XHJcblxyXG4gICAgfSBcclxuXHJcbiAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBhd2FpdCBsYWJlbC53YWl0Rm9yRGlzcGxheWVkKDEwMDAwKTtcclxuICAgICAgICBnZXRUZXh0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gY29uc3QgbGFiZWxUZXh0ID0gIGF3YWl0IGxhYmVsLmdldFRleHQoKTtcclxuICAgIC8vIGFzc2VydC5lcXVhbChsYWJlbFRleHQsdGV4dCwnbGFiZWwgdGV4dCBpcyBub3QgYXMgZXhwZWN0ZWQuJyk7XHJcbiAgICBcclxufSk7XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQTtBQUFGLElBQVdDLE9BQU8sQ0FBQywwQkFBRCxDQUF4Qjs7QUFFQSxNQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0QsSUFBSSxDQUFDQyxNQUFwQixDLENBRUE7O0FBQ0FILElBQUksQ0FBQyxzQ0FBRCxFQUF5QyxNQUFPSSxJQUFQLElBQWdCO0VBRXhELE1BQU1DLEtBQUssR0FBR0MsQ0FBQyxDQUFDLDJCQUFELENBQWYsQ0FGd0QsQ0FHekQ7O0VBR0EsU0FBU0MsT0FBVCxHQUNBO0lBQ0ksTUFBTUMsU0FBUyxHQUFHSCxLQUFLLENBQUNFLE9BQU4sRUFBbEI7SUFDQUUsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQWdCRixTQUE1QixFQUZKLENBR0k7O0lBQ0EsT0FBT0EsU0FBUDtFQUNIOztFQUVELElBQUk7SUFFQSxNQUFNRyxVQUFVLEdBQUdKLE9BQU8sRUFBMUIsQ0FGQSxDQUdBOztJQUNDRSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBZ0JDLFVBQTVCO0lBQ0QsTUFBTUMsT0FBTyxDQUFDQyxLQUFSLEVBQU47SUFDQVYsTUFBTSxDQUFDVyxLQUFQLENBQWFILFVBQWIsRUFBd0JQLElBQXhCLEVBQTZCLGdDQUE3QjtFQUVILENBUkQsQ0FVQSxPQUFPVyxLQUFQLEVBQWM7SUFDVixNQUFNVixLQUFLLENBQUNXLGdCQUFOLENBQXVCLEtBQXZCLENBQU47SUFDQVQsT0FBTztFQUNWLENBM0J3RCxDQTZCekQ7RUFDQTs7QUFFSCxDQWhDRyxDQUFKIn0=","map":{"version":3,"names":["Then","require","chai","assert","text","label","$","getText","labelText","console","log","actualText","browser","debug","equal","error","waitForDisplayed"],"sourceRoot":"F:\\VS Code projects\\Webdriverio\\Task 1\\step-definitions\\","sources":["ClientSideDelayPageSteps.js"],"sourcesContent":["const { Then } = require('@wdio/cucumber-framework');\r\n\r\nconst chai = require('chai');\r\nconst assert = chai.assert; \r\n\r\n//Then the user verifies the \"Data calculated on the client side.\" label\r\nThen(/^the user verifies the \"(.*)\" label$/, async (text) => {\r\n    \r\n     const label = $(\".//p[@class='bg-success']\");\r\n    // await label.waitForDisplayed(15000);\r\n\r\n\r\n    function getText()\r\n    {\r\n        const labelText = label.getText();\r\n        console.log(\"My label = \" + labelText);\r\n        //await browser.debug();\r\n        return labelText;\r\n    }\r\n\r\n    try {\r\n        \r\n        const actualText = getText();\r\n        // const labelText =  await label.getText();\r\n         console.log(\"My label = \" + actualText);\r\n        await browser.debug();\r\n        assert.equal(actualText,text,'label text is not as expected.');\r\n\r\n    } \r\n\r\n    catch (error) {\r\n        await label.waitForDisplayed(10000);\r\n        getText();\r\n    }\r\n\r\n    // const labelText =  await label.getText();\r\n    // assert.equal(labelText,text,'label text is not as expected.');\r\n    \r\n});\r\n"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAWC,OAAO,CAAC,0BAAD,CAAxB;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,MAAM,GAAGD,IAAI,CAACC,MAApB,C,CAEA;;AACAH,IAAI,CAAC,sCAAD,EAAyC,MAAOI,IAAP,IAAgB;EAExD,MAAMC,KAAK,GAAGC,CAAC,CAAC,2BAAD,CAAf,CAFwD,CAGzD;;EAGA,SAASC,OAAT,GACA;IACI,MAAMC,SAAS,GAAGH,KAAK,CAACE,OAAN,EAAlB;IACAE,OAAO,CAACC,GAAR,CAAY,gBAAgBF,SAA5B,EAFJ,CAGI;;IACA,OAAOA,SAAP;EACH;;EAED,IAAI;IAEA,MAAMG,UAAU,GAAGJ,OAAO,EAA1B,CAFA,CAGA;;IACCE,OAAO,CAACC,GAAR,CAAY,gBAAgBC,UAA5B;IACD,MAAMC,OAAO,CAACC,KAAR,EAAN;IACAV,MAAM,CAACW,KAAP,CAAaH,UAAb,EAAwBP,IAAxB,EAA6B,gCAA7B;EAEH,CARD,CAUA,OAAOW,KAAP,EAAc;IACV,MAAMV,KAAK,CAACW,gBAAN,CAAuB,KAAvB,CAAN;IACAT,OAAO;EACV,CA3BwD,CA6BzD;EACA;;AAEH,CAhCG,CAAJ"}},"mtime":1656855406181},"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\step-definitions\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\step-definitions\\\\HomePageSteps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"const {\n  Given,\n  When,\n  Then\n} = require('@wdio/cucumber-framework');\n\nconst chai = require('chai');\n\nconst assert = chai.assert;\nconst clickPageText = $(\".//h3\");\nconst homePageTitle = $(\".//h1\");\nThen(/^the user clicks the \"(.*)\" link$/, async keyword => {\n  const clickLink = $(\".//a[text()='\" + keyword + \"']\");\n  await clickLink.click();\n  const actualHeader = await clickPageText.getText();\n  assert.equal(actualHeader, keyword, 'Page header is incorrect');\n});\nThen(/^the user clicks the \"(.*)\" Button$/, async keyword => {\n  const badButton = $(\".//button[text()='\" + keyword + \"']\");\n  await badButton.click();\n});\nGiven(\"the user navigate to the home page\", async () => {\n  await browser.url(\"/\");\n  await browser.maximizeWindow();\n  var actualHeader = await homePageTitle.getText();\n  var actualHeader = await actualHeader.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n  assert.equal(actualHeader, \"UI Test Automation Playground\", 'Page header is incorrect');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHaXZlbiIsIldoZW4iLCJUaGVuIiwicmVxdWlyZSIsImNoYWkiLCJhc3NlcnQiLCJjbGlja1BhZ2VUZXh0IiwiJCIsImhvbWVQYWdlVGl0bGUiLCJrZXl3b3JkIiwiY2xpY2tMaW5rIiwiY2xpY2siLCJhY3R1YWxIZWFkZXIiLCJnZXRUZXh0IiwiZXF1YWwiLCJiYWRCdXR0b24iLCJicm93c2VyIiwidXJsIiwibWF4aW1pemVXaW5kb3ciLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiJGOlxcVlMgQ29kZSBwcm9qZWN0c1xcV2ViZHJpdmVyaW9cXFRhc2sgMVxcc3RlcC1kZWZpbml0aW9uc1xcIiwic291cmNlcyI6WyJIb21lUGFnZVN0ZXBzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgR2l2ZW4sIFdoZW4sIFRoZW4gfSA9IHJlcXVpcmUoJ0B3ZGlvL2N1Y3VtYmVyLWZyYW1ld29yaycpO1xyXG5cclxuY29uc3QgY2hhaSA9IHJlcXVpcmUoJ2NoYWknKTtcclxuY29uc3QgYXNzZXJ0ID0gY2hhaS5hc3NlcnQ7IFxyXG5cclxuXHJcbmNvbnN0IGNsaWNrUGFnZVRleHQgPSAkKFwiLi8vaDNcIik7XHJcbmNvbnN0IGhvbWVQYWdlVGl0bGUgPSAkKFwiLi8vaDFcIik7XHJcblxyXG5cclxuVGhlbigvXnRoZSB1c2VyIGNsaWNrcyB0aGUgXCIoLiopXCIgbGluayQvLCBhc3luYyAoa2V5d29yZCkgPT4ge1xyXG5cclxuICAgIGNvbnN0IGNsaWNrTGluayA9ICQoXCIuLy9hW3RleHQoKT0nXCIgKyBrZXl3b3JkICsgXCInXVwiKTtcclxuICAgIGF3YWl0IGNsaWNrTGluay5jbGljaygpO1xyXG5cclxuICAgIGNvbnN0IGFjdHVhbEhlYWRlciA9IGF3YWl0IGNsaWNrUGFnZVRleHQuZ2V0VGV4dCgpO1xyXG4gICAgYXNzZXJ0LmVxdWFsKGFjdHVhbEhlYWRlcixrZXl3b3JkLCdQYWdlIGhlYWRlciBpcyBpbmNvcnJlY3QnKTtcclxuXHJcbn0pO1xyXG5cclxuVGhlbigvXnRoZSB1c2VyIGNsaWNrcyB0aGUgXCIoLiopXCIgQnV0dG9uJC8sIGFzeW5jIChrZXl3b3JkKSA9PiB7XHJcbiAgICBcclxuICAgIGNvbnN0IGJhZEJ1dHRvbiA9ICQoXCIuLy9idXR0b25bdGV4dCgpPSdcIiArIGtleXdvcmQgKyBcIiddXCIpO1xyXG4gICAgYXdhaXQgYmFkQnV0dG9uLmNsaWNrKCk7XHJcbiAgICBcclxufSk7XHJcblxyXG5HaXZlbihcInRoZSB1c2VyIG5hdmlnYXRlIHRvIHRoZSBob21lIHBhZ2VcIiwgYXN5bmMoKSA9PnsgICAgICAgICBcclxuICAgIFxyXG4gICAgYXdhaXQgYnJvd3Nlci51cmwoXCIvXCIpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5tYXhpbWl6ZVdpbmRvdygpO1xyXG5cclxuICAgIHZhciBhY3R1YWxIZWFkZXIgPSBhd2FpdCBob21lUGFnZVRpdGxlLmdldFRleHQoKTtcclxuICAgIHZhciBhY3R1YWxIZWFkZXIgPSBhd2FpdCBhY3R1YWxIZWFkZXIucmVwbGFjZSgvKFxcclxcbnxcXG58XFxyKS9nbSwgXCIgXCIpO1xyXG5cclxuICAgIGFzc2VydC5lcXVhbChhY3R1YWxIZWFkZXIsXCJVSSBUZXN0IEF1dG9tYXRpb24gUGxheWdyb3VuZFwiLCdQYWdlIGhlYWRlciBpcyBpbmNvcnJlY3QnKTsgICAgXHJcblxyXG59KTsiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07RUFBRUEsS0FBRjtFQUFTQyxJQUFUO0VBQWVDO0FBQWYsSUFBd0JDLE9BQU8sQ0FBQywwQkFBRCxDQUFyQzs7QUFFQSxNQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0QsSUFBSSxDQUFDQyxNQUFwQjtBQUdBLE1BQU1DLGFBQWEsR0FBR0MsQ0FBQyxDQUFDLE9BQUQsQ0FBdkI7QUFDQSxNQUFNQyxhQUFhLEdBQUdELENBQUMsQ0FBQyxPQUFELENBQXZCO0FBR0FMLElBQUksQ0FBQyxtQ0FBRCxFQUFzQyxNQUFPTyxPQUFQLElBQW1CO0VBRXpELE1BQU1DLFNBQVMsR0FBR0gsQ0FBQyxDQUFDLGtCQUFrQkUsT0FBbEIsR0FBNEIsSUFBN0IsQ0FBbkI7RUFDQSxNQUFNQyxTQUFTLENBQUNDLEtBQVYsRUFBTjtFQUVBLE1BQU1DLFlBQVksR0FBRyxNQUFNTixhQUFhLENBQUNPLE9BQWQsRUFBM0I7RUFDQVIsTUFBTSxDQUFDUyxLQUFQLENBQWFGLFlBQWIsRUFBMEJILE9BQTFCLEVBQWtDLDBCQUFsQztBQUVILENBUkcsQ0FBSjtBQVVBUCxJQUFJLENBQUMscUNBQUQsRUFBd0MsTUFBT08sT0FBUCxJQUFtQjtFQUUzRCxNQUFNTSxTQUFTLEdBQUdSLENBQUMsQ0FBQyx1QkFBdUJFLE9BQXZCLEdBQWlDLElBQWxDLENBQW5CO0VBQ0EsTUFBTU0sU0FBUyxDQUFDSixLQUFWLEVBQU47QUFFSCxDQUxHLENBQUo7QUFPQVgsS0FBSyxDQUFDLG9DQUFELEVBQXVDLFlBQVU7RUFFbEQsTUFBTWdCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLEdBQVosQ0FBTjtFQUNBLE1BQU1ELE9BQU8sQ0FBQ0UsY0FBUixFQUFOO0VBRUEsSUFBSU4sWUFBWSxHQUFHLE1BQU1KLGFBQWEsQ0FBQ0ssT0FBZCxFQUF6QjtFQUNBLElBQUlELFlBQVksR0FBRyxNQUFNQSxZQUFZLENBQUNPLE9BQWIsQ0FBcUIsZ0JBQXJCLEVBQXVDLEdBQXZDLENBQXpCO0VBRUFkLE1BQU0sQ0FBQ1MsS0FBUCxDQUFhRixZQUFiLEVBQTBCLCtCQUExQixFQUEwRCwwQkFBMUQ7QUFFSCxDQVZJLENBQUwifQ==","map":{"version":3,"names":["Given","When","Then","require","chai","assert","clickPageText","$","homePageTitle","keyword","clickLink","click","actualHeader","getText","equal","badButton","browser","url","maximizeWindow","replace"],"sourceRoot":"F:\\VS Code projects\\Webdriverio\\Task 1\\step-definitions\\","sources":["HomePageSteps.js"],"sourcesContent":["const { Given, When, Then } = require('@wdio/cucumber-framework');\r\n\r\nconst chai = require('chai');\r\nconst assert = chai.assert; \r\n\r\n\r\nconst clickPageText = $(\".//h3\");\r\nconst homePageTitle = $(\".//h1\");\r\n\r\n\r\nThen(/^the user clicks the \"(.*)\" link$/, async (keyword) => {\r\n\r\n    const clickLink = $(\".//a[text()='\" + keyword + \"']\");\r\n    await clickLink.click();\r\n\r\n    const actualHeader = await clickPageText.getText();\r\n    assert.equal(actualHeader,keyword,'Page header is incorrect');\r\n\r\n});\r\n\r\nThen(/^the user clicks the \"(.*)\" Button$/, async (keyword) => {\r\n    \r\n    const badButton = $(\".//button[text()='\" + keyword + \"']\");\r\n    await badButton.click();\r\n    \r\n});\r\n\r\nGiven(\"the user navigate to the home page\", async() =>{         \r\n    \r\n    await browser.url(\"/\");\r\n    await browser.maximizeWindow();\r\n\r\n    var actualHeader = await homePageTitle.getText();\r\n    var actualHeader = await actualHeader.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\r\n\r\n    assert.equal(actualHeader,\"UI Test Automation Playground\",'Page header is incorrect');    \r\n\r\n});"],"mappings":"AAAA,MAAM;EAAEA,KAAF;EAASC,IAAT;EAAeC;AAAf,IAAwBC,OAAO,CAAC,0BAAD,CAArC;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,MAAM,GAAGD,IAAI,CAACC,MAApB;AAGA,MAAMC,aAAa,GAAGC,CAAC,CAAC,OAAD,CAAvB;AACA,MAAMC,aAAa,GAAGD,CAAC,CAAC,OAAD,CAAvB;AAGAL,IAAI,CAAC,mCAAD,EAAsC,MAAOO,OAAP,IAAmB;EAEzD,MAAMC,SAAS,GAAGH,CAAC,CAAC,kBAAkBE,OAAlB,GAA4B,IAA7B,CAAnB;EACA,MAAMC,SAAS,CAACC,KAAV,EAAN;EAEA,MAAMC,YAAY,GAAG,MAAMN,aAAa,CAACO,OAAd,EAA3B;EACAR,MAAM,CAACS,KAAP,CAAaF,YAAb,EAA0BH,OAA1B,EAAkC,0BAAlC;AAEH,CARG,CAAJ;AAUAP,IAAI,CAAC,qCAAD,EAAwC,MAAOO,OAAP,IAAmB;EAE3D,MAAMM,SAAS,GAAGR,CAAC,CAAC,uBAAuBE,OAAvB,GAAiC,IAAlC,CAAnB;EACA,MAAMM,SAAS,CAACJ,KAAV,EAAN;AAEH,CALG,CAAJ;AAOAX,KAAK,CAAC,oCAAD,EAAuC,YAAU;EAElD,MAAMgB,OAAO,CAACC,GAAR,CAAY,GAAZ,CAAN;EACA,MAAMD,OAAO,CAACE,cAAR,EAAN;EAEA,IAAIN,YAAY,GAAG,MAAMJ,aAAa,CAACK,OAAd,EAAzB;EACA,IAAID,YAAY,GAAG,MAAMA,YAAY,CAACO,OAAb,CAAqB,gBAArB,EAAuC,GAAvC,CAAzB;EAEAd,MAAM,CAACS,KAAP,CAAaF,YAAb,EAA0B,+BAA1B,EAA0D,0BAA1D;AAEH,CAVI,CAAL"}},"mtime":1656855932680},"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\step-definitions\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\step-definitions\\\\TextInputPageSteps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"const {\n  Then\n} = require('@wdio/cucumber-framework');\n\nconst chai = require('chai');\n\nconst assert = chai.assert;\nlet userinput = \"\"; //Then the user clicks the button & verifies the button text\n\nThen(/^the user clicks the button & verifies the button text$/, async () => {\n  const updatebutton = $(\".//button[@id='updatingButton']\");\n  await updatebutton.click(); //await browser.debug();\n\n  const expectedtext = userinput;\n  const actualtext = userinput; //console.log(\"button text = \" + actualtext);\n\n  assert.equal(actualtext, expectedtext, 'button text is incorect!');\n}); //Then user types \"My Input\" in the text box\n\nThen(/^user types \"(.*)\" in the text box$/, async text => {\n  userinput = text;\n  const textfield = $(\".//input[@id='newButtonName']\");\n  await textfield.setValue(text);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUaGVuIiwicmVxdWlyZSIsImNoYWkiLCJhc3NlcnQiLCJ1c2VyaW5wdXQiLCJ1cGRhdGVidXR0b24iLCIkIiwiY2xpY2siLCJleHBlY3RlZHRleHQiLCJhY3R1YWx0ZXh0IiwiZXF1YWwiLCJ0ZXh0IiwidGV4dGZpZWxkIiwic2V0VmFsdWUiXSwic291cmNlUm9vdCI6IkY6XFxWUyBDb2RlIHByb2plY3RzXFxXZWJkcml2ZXJpb1xcVGFzayAxXFxzdGVwLWRlZmluaXRpb25zXFwiLCJzb3VyY2VzIjpbIlRleHRJbnB1dFBhZ2VTdGVwcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IFRoZW4gfSA9IHJlcXVpcmUoJ0B3ZGlvL2N1Y3VtYmVyLWZyYW1ld29yaycpO1xyXG5cclxuY29uc3QgY2hhaSA9IHJlcXVpcmUoJ2NoYWknKTtcclxuY29uc3QgYXNzZXJ0ID0gY2hhaS5hc3NlcnQ7IFxyXG5cclxubGV0IHVzZXJpbnB1dD1cIlwiO1xyXG5cclxuLy9UaGVuIHRoZSB1c2VyIGNsaWNrcyB0aGUgYnV0dG9uICYgdmVyaWZpZXMgdGhlIGJ1dHRvbiB0ZXh0XHJcblRoZW4oL150aGUgdXNlciBjbGlja3MgdGhlIGJ1dHRvbiAmIHZlcmlmaWVzIHRoZSBidXR0b24gdGV4dCQvLCBhc3luYyAoKSA9PiB7XHJcbiAgICBcclxuICAgIGNvbnN0IHVwZGF0ZWJ1dHRvbiA9ICQoXCIuLy9idXR0b25bQGlkPSd1cGRhdGluZ0J1dHRvbiddXCIpO1xyXG4gICAgYXdhaXQgdXBkYXRlYnV0dG9uLmNsaWNrKCk7XHJcbiAgICAvL2F3YWl0IGJyb3dzZXIuZGVidWcoKTtcclxuXHJcbiAgICBjb25zdCBleHBlY3RlZHRleHQgPSB1c2VyaW5wdXQ7XHJcbiAgICBjb25zdCBhY3R1YWx0ZXh0ID0gdXNlcmlucHV0O1xyXG4gICAgLy9jb25zb2xlLmxvZyhcImJ1dHRvbiB0ZXh0ID0gXCIgKyBhY3R1YWx0ZXh0KTtcclxuXHJcbiAgICBhc3NlcnQuZXF1YWwoYWN0dWFsdGV4dCxleHBlY3RlZHRleHQsJ2J1dHRvbiB0ZXh0IGlzIGluY29yZWN0IScpO1xyXG4gICAgXHJcbn0pO1xyXG5cclxuLy9UaGVuIHVzZXIgdHlwZXMgXCJNeSBJbnB1dFwiIGluIHRoZSB0ZXh0IGJveFxyXG5UaGVuKC9edXNlciB0eXBlcyBcIiguKilcIiBpbiB0aGUgdGV4dCBib3gkLywgYXN5bmMgKHRleHQpID0+IHtcclxuICAgIFxyXG4gICAgdXNlcmlucHV0ID0gdGV4dDtcclxuICAgIGNvbnN0IHRleHRmaWVsZCA9ICQoXCIuLy9pbnB1dFtAaWQ9J25ld0J1dHRvbk5hbWUnXVwiKTtcclxuICAgIGF3YWl0IHRleHRmaWVsZC5zZXRWYWx1ZSh0ZXh0KTtcclxuICAgIFxyXG59KTsiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07RUFBRUE7QUFBRixJQUFXQyxPQUFPLENBQUMsMEJBQUQsQ0FBeEI7O0FBRUEsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNRSxNQUFNLEdBQUdELElBQUksQ0FBQ0MsTUFBcEI7QUFFQSxJQUFJQyxTQUFTLEdBQUMsRUFBZCxDLENBRUE7O0FBQ0FKLElBQUksQ0FBQyx5REFBRCxFQUE0RCxZQUFZO0VBRXhFLE1BQU1LLFlBQVksR0FBR0MsQ0FBQyxDQUFDLGlDQUFELENBQXRCO0VBQ0EsTUFBTUQsWUFBWSxDQUFDRSxLQUFiLEVBQU4sQ0FId0UsQ0FJeEU7O0VBRUEsTUFBTUMsWUFBWSxHQUFHSixTQUFyQjtFQUNBLE1BQU1LLFVBQVUsR0FBR0wsU0FBbkIsQ0FQd0UsQ0FReEU7O0VBRUFELE1BQU0sQ0FBQ08sS0FBUCxDQUFhRCxVQUFiLEVBQXdCRCxZQUF4QixFQUFxQywwQkFBckM7QUFFSCxDQVpHLENBQUosQyxDQWNBOztBQUNBUixJQUFJLENBQUMscUNBQUQsRUFBd0MsTUFBT1csSUFBUCxJQUFnQjtFQUV4RFAsU0FBUyxHQUFHTyxJQUFaO0VBQ0EsTUFBTUMsU0FBUyxHQUFHTixDQUFDLENBQUMsK0JBQUQsQ0FBbkI7RUFDQSxNQUFNTSxTQUFTLENBQUNDLFFBQVYsQ0FBbUJGLElBQW5CLENBQU47QUFFSCxDQU5HLENBQUoifQ==","map":{"version":3,"names":["Then","require","chai","assert","userinput","updatebutton","$","click","expectedtext","actualtext","equal","text","textfield","setValue"],"sourceRoot":"F:\\VS Code projects\\Webdriverio\\Task 1\\step-definitions\\","sources":["TextInputPageSteps.js"],"sourcesContent":["const { Then } = require('@wdio/cucumber-framework');\r\n\r\nconst chai = require('chai');\r\nconst assert = chai.assert; \r\n\r\nlet userinput=\"\";\r\n\r\n//Then the user clicks the button & verifies the button text\r\nThen(/^the user clicks the button & verifies the button text$/, async () => {\r\n    \r\n    const updatebutton = $(\".//button[@id='updatingButton']\");\r\n    await updatebutton.click();\r\n    //await browser.debug();\r\n\r\n    const expectedtext = userinput;\r\n    const actualtext = userinput;\r\n    //console.log(\"button text = \" + actualtext);\r\n\r\n    assert.equal(actualtext,expectedtext,'button text is incorect!');\r\n    \r\n});\r\n\r\n//Then user types \"My Input\" in the text box\r\nThen(/^user types \"(.*)\" in the text box$/, async (text) => {\r\n    \r\n    userinput = text;\r\n    const textfield = $(\".//input[@id='newButtonName']\");\r\n    await textfield.setValue(text);\r\n    \r\n});"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAWC,OAAO,CAAC,0BAAD,CAAxB;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,MAAM,GAAGD,IAAI,CAACC,MAApB;AAEA,IAAIC,SAAS,GAAC,EAAd,C,CAEA;;AACAJ,IAAI,CAAC,yDAAD,EAA4D,YAAY;EAExE,MAAMK,YAAY,GAAGC,CAAC,CAAC,iCAAD,CAAtB;EACA,MAAMD,YAAY,CAACE,KAAb,EAAN,CAHwE,CAIxE;;EAEA,MAAMC,YAAY,GAAGJ,SAArB;EACA,MAAMK,UAAU,GAAGL,SAAnB,CAPwE,CAQxE;;EAEAD,MAAM,CAACO,KAAP,CAAaD,UAAb,EAAwBD,YAAxB,EAAqC,0BAArC;AAEH,CAZG,CAAJ,C,CAcA;;AACAR,IAAI,CAAC,qCAAD,EAAwC,MAAOW,IAAP,IAAgB;EAExDP,SAAS,GAAGO,IAAZ;EACA,MAAMC,SAAS,GAAGN,CAAC,CAAC,+BAAD,CAAnB;EACA,MAAMM,SAAS,CAACC,QAAV,CAAmBF,IAAnB,CAAN;AAEH,CANG,CAAJ"}},"mtime":1656855313683},"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\StepDefinitions\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\StepDefinitions\\\\ClickPageSteps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"const {\n  Given,\n  When,\n  Then\n} = require('@wdio/cucumber-framework');\n\nconst chai = require('chai');\n\nconst assert = chai.assert; // Then the user verifies the button color change\n\nThen(\"the user verifies the button color change\", async () => {\n  const newButton = $(\".//button[@class='btn btn-success']\");\n  await newButton.waitForDisplayed(2000);\n  const btnColor = await newButton.getCSSProperty('background-color');\n  const btnCol = JSON.stringify(btnColor);\n  var btnColorText = JSON.parse(btnCol);\n  console.log(\"actual button color = \" + btnColorText.value); //console.log(\"actual button color = \" + btnCol);\n\n  const expectedBtnColor = \"rgba(0,123,255,1)\";\n  const actualBtnColor = btnColorText.value;\n  assert.equal(actualBtnColor, expectedBtnColor, 'Expected Button color = ' + expectedBtnColor, 'Actual button color = ' + actualBtnColor);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHaXZlbiIsIldoZW4iLCJUaGVuIiwicmVxdWlyZSIsImNoYWkiLCJhc3NlcnQiLCJuZXdCdXR0b24iLCIkIiwid2FpdEZvckRpc3BsYXllZCIsImJ0bkNvbG9yIiwiZ2V0Q1NTUHJvcGVydHkiLCJidG5Db2wiLCJKU09OIiwic3RyaW5naWZ5IiwiYnRuQ29sb3JUZXh0IiwicGFyc2UiLCJjb25zb2xlIiwibG9nIiwidmFsdWUiLCJleHBlY3RlZEJ0bkNvbG9yIiwiYWN0dWFsQnRuQ29sb3IiLCJlcXVhbCJdLCJzb3VyY2VSb290IjoiRjpcXFZTIENvZGUgcHJvamVjdHNcXFdlYmRyaXZlcmlvXFxUYXNrIDFcXFN0ZXBEZWZpbml0aW9uc1xcIiwic291cmNlcyI6WyJDbGlja1BhZ2VTdGVwcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IEdpdmVuLCBXaGVuLCBUaGVuIH0gPSByZXF1aXJlKCdAd2Rpby9jdWN1bWJlci1mcmFtZXdvcmsnKTtcclxuXHJcbmNvbnN0IGNoYWkgPSByZXF1aXJlKCdjaGFpJyk7XHJcbmNvbnN0IGFzc2VydCA9IGNoYWkuYXNzZXJ0OyBcclxuXHJcbi8vIFRoZW4gdGhlIHVzZXIgdmVyaWZpZXMgdGhlIGJ1dHRvbiBjb2xvciBjaGFuZ2VcclxuVGhlbihcInRoZSB1c2VyIHZlcmlmaWVzIHRoZSBidXR0b24gY29sb3IgY2hhbmdlXCIsIGFzeW5jKCkgPT57ICAgICAgICAgXHJcblxyXG4gICAgY29uc3QgbmV3QnV0dG9uID0gJChcIi4vL2J1dHRvbltAY2xhc3M9J2J0biBidG4tc3VjY2VzcyddXCIpO1xyXG4gICAgYXdhaXQgbmV3QnV0dG9uLndhaXRGb3JEaXNwbGF5ZWQoMjAwMCk7ICAgIFxyXG4gICAgY29uc3QgYnRuQ29sb3IgPSBhd2FpdCBuZXdCdXR0b24uZ2V0Q1NTUHJvcGVydHkoJ2JhY2tncm91bmQtY29sb3InKTtcclxuXHJcbiAgICBjb25zdCBidG5Db2wgPSBKU09OLnN0cmluZ2lmeShidG5Db2xvcik7XHJcbiAgICB2YXIgYnRuQ29sb3JUZXh0ID0gSlNPTi5wYXJzZShidG5Db2wpO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKFwiYWN0dWFsIGJ1dHRvbiBjb2xvciA9IFwiICsgYnRuQ29sb3JUZXh0LnZhbHVlKTtcclxuICAgIC8vY29uc29sZS5sb2coXCJhY3R1YWwgYnV0dG9uIGNvbG9yID0gXCIgKyBidG5Db2wpO1xyXG5cclxuICAgIGNvbnN0IGV4cGVjdGVkQnRuQ29sb3IgPSBcInJnYmEoMCwxMjMsMjU1LDEpXCI7XHJcbiAgICBjb25zdCBhY3R1YWxCdG5Db2xvciA9IGJ0bkNvbG9yVGV4dC52YWx1ZTtcclxuICAgIGFzc2VydC5lcXVhbChhY3R1YWxCdG5Db2xvcixleHBlY3RlZEJ0bkNvbG9yLCdFeHBlY3RlZCBCdXR0b24gY29sb3IgPSAnICsgZXhwZWN0ZWRCdG5Db2xvciwgJ0FjdHVhbCBidXR0b24gY29sb3IgPSAnICsgYWN0dWFsQnRuQ29sb3IpO1xyXG5cclxufSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBLEtBQUY7RUFBU0MsSUFBVDtFQUFlQztBQUFmLElBQXdCQyxPQUFPLENBQUMsMEJBQUQsQ0FBckM7O0FBRUEsTUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNRSxNQUFNLEdBQUdELElBQUksQ0FBQ0MsTUFBcEIsQyxDQUVBOztBQUNBSCxJQUFJLENBQUMsMkNBQUQsRUFBOEMsWUFBVTtFQUV4RCxNQUFNSSxTQUFTLEdBQUdDLENBQUMsQ0FBQyxxQ0FBRCxDQUFuQjtFQUNBLE1BQU1ELFNBQVMsQ0FBQ0UsZ0JBQVYsQ0FBMkIsSUFBM0IsQ0FBTjtFQUNBLE1BQU1DLFFBQVEsR0FBRyxNQUFNSCxTQUFTLENBQUNJLGNBQVYsQ0FBeUIsa0JBQXpCLENBQXZCO0VBRUEsTUFBTUMsTUFBTSxHQUFHQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUosUUFBZixDQUFmO0VBQ0EsSUFBSUssWUFBWSxHQUFHRixJQUFJLENBQUNHLEtBQUwsQ0FBV0osTUFBWCxDQUFuQjtFQUVBSyxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQkFBMkJILFlBQVksQ0FBQ0ksS0FBcEQsRUFUd0QsQ0FVeEQ7O0VBRUEsTUFBTUMsZ0JBQWdCLEdBQUcsbUJBQXpCO0VBQ0EsTUFBTUMsY0FBYyxHQUFHTixZQUFZLENBQUNJLEtBQXBDO0VBQ0FiLE1BQU0sQ0FBQ2dCLEtBQVAsQ0FBYUQsY0FBYixFQUE0QkQsZ0JBQTVCLEVBQTZDLDZCQUE2QkEsZ0JBQTFFLEVBQTRGLDJCQUEyQkMsY0FBdkg7QUFFSCxDQWhCRyxDQUFKIn0=","map":{"version":3,"names":["Given","When","Then","require","chai","assert","newButton","$","waitForDisplayed","btnColor","getCSSProperty","btnCol","JSON","stringify","btnColorText","parse","console","log","value","expectedBtnColor","actualBtnColor","equal"],"sourceRoot":"F:\\VS Code projects\\Webdriverio\\Task 1\\StepDefinitions\\","sources":["ClickPageSteps.js"],"sourcesContent":["const { Given, When, Then } = require('@wdio/cucumber-framework');\r\n\r\nconst chai = require('chai');\r\nconst assert = chai.assert; \r\n\r\n// Then the user verifies the button color change\r\nThen(\"the user verifies the button color change\", async() =>{         \r\n\r\n    const newButton = $(\".//button[@class='btn btn-success']\");\r\n    await newButton.waitForDisplayed(2000);    \r\n    const btnColor = await newButton.getCSSProperty('background-color');\r\n\r\n    const btnCol = JSON.stringify(btnColor);\r\n    var btnColorText = JSON.parse(btnCol);\r\n\r\n    console.log(\"actual button color = \" + btnColorText.value);\r\n    //console.log(\"actual button color = \" + btnCol);\r\n\r\n    const expectedBtnColor = \"rgba(0,123,255,1)\";\r\n    const actualBtnColor = btnColorText.value;\r\n    assert.equal(actualBtnColor,expectedBtnColor,'Expected Button color = ' + expectedBtnColor, 'Actual button color = ' + actualBtnColor);\r\n\r\n});"],"mappings":"AAAA,MAAM;EAAEA,KAAF;EAASC,IAAT;EAAeC;AAAf,IAAwBC,OAAO,CAAC,0BAAD,CAArC;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,MAAM,GAAGD,IAAI,CAACC,MAApB,C,CAEA;;AACAH,IAAI,CAAC,2CAAD,EAA8C,YAAU;EAExD,MAAMI,SAAS,GAAGC,CAAC,CAAC,qCAAD,CAAnB;EACA,MAAMD,SAAS,CAACE,gBAAV,CAA2B,IAA3B,CAAN;EACA,MAAMC,QAAQ,GAAG,MAAMH,SAAS,CAACI,cAAV,CAAyB,kBAAzB,CAAvB;EAEA,MAAMC,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAf;EACA,IAAIK,YAAY,GAAGF,IAAI,CAACG,KAAL,CAAWJ,MAAX,CAAnB;EAEAK,OAAO,CAACC,GAAR,CAAY,2BAA2BH,YAAY,CAACI,KAApD,EATwD,CAUxD;;EAEA,MAAMC,gBAAgB,GAAG,mBAAzB;EACA,MAAMC,cAAc,GAAGN,YAAY,CAACI,KAApC;EACAb,MAAM,CAACgB,KAAP,CAAaD,cAAb,EAA4BD,gBAA5B,EAA6C,6BAA6BA,gBAA1E,EAA4F,2BAA2BC,cAAvH;AAEH,CAhBG,CAAJ"}},"mtime":1656855932680},"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\StepDefinitions\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\StepDefinitions\\\\HomePageSteps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"const {\n  Given,\n  When,\n  Then\n} = require('@wdio/cucumber-framework');\n\nconst chai = require('chai');\n\nconst assert = chai.assert;\nconst clickPageText = $(\".//h3\");\nconst homePageTitle = $(\".//h1\");\nThen(/^the user clicks the \"(.*)\" link$/, async keyword => {\n  const clickLink = $(\".//a[text()='\" + keyword + \"']\");\n  await clickLink.click();\n  const actualHeader = await clickPageText.getText();\n  assert.equal(actualHeader, keyword, 'Page header is incorrect');\n});\nThen(/^the user clicks the \"(.*)\" Button$/, async keyword => {\n  const badButton = $(\".//button[text()='\" + keyword + \"']\");\n  await badButton.click();\n});\nGiven(\"the user navigate to the home page\", async () => {\n  await browser.url(\"/\");\n  await browser.maximizeWindow();\n  var actualHeader = await homePageTitle.getText();\n  var actualHeader = await actualHeader.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\n  assert.equal(actualHeader, \"UI Test Automation Playground\", 'Page header is incorrect');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHaXZlbiIsIldoZW4iLCJUaGVuIiwicmVxdWlyZSIsImNoYWkiLCJhc3NlcnQiLCJjbGlja1BhZ2VUZXh0IiwiJCIsImhvbWVQYWdlVGl0bGUiLCJrZXl3b3JkIiwiY2xpY2tMaW5rIiwiY2xpY2siLCJhY3R1YWxIZWFkZXIiLCJnZXRUZXh0IiwiZXF1YWwiLCJiYWRCdXR0b24iLCJicm93c2VyIiwidXJsIiwibWF4aW1pemVXaW5kb3ciLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiJGOlxcVlMgQ29kZSBwcm9qZWN0c1xcV2ViZHJpdmVyaW9cXFRhc2sgMVxcU3RlcERlZmluaXRpb25zXFwiLCJzb3VyY2VzIjpbIkhvbWVQYWdlU3RlcHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBHaXZlbiwgV2hlbiwgVGhlbiB9ID0gcmVxdWlyZSgnQHdkaW8vY3VjdW1iZXItZnJhbWV3b3JrJyk7XHJcblxyXG5jb25zdCBjaGFpID0gcmVxdWlyZSgnY2hhaScpO1xyXG5jb25zdCBhc3NlcnQgPSBjaGFpLmFzc2VydDsgXHJcblxyXG5cclxuY29uc3QgY2xpY2tQYWdlVGV4dCA9ICQoXCIuLy9oM1wiKTtcclxuY29uc3QgaG9tZVBhZ2VUaXRsZSA9ICQoXCIuLy9oMVwiKTtcclxuXHJcblxyXG5UaGVuKC9edGhlIHVzZXIgY2xpY2tzIHRoZSBcIiguKilcIiBsaW5rJC8sIGFzeW5jIChrZXl3b3JkKSA9PiB7XHJcblxyXG4gICAgY29uc3QgY2xpY2tMaW5rID0gJChcIi4vL2FbdGV4dCgpPSdcIiArIGtleXdvcmQgKyBcIiddXCIpO1xyXG4gICAgYXdhaXQgY2xpY2tMaW5rLmNsaWNrKCk7XHJcblxyXG4gICAgY29uc3QgYWN0dWFsSGVhZGVyID0gYXdhaXQgY2xpY2tQYWdlVGV4dC5nZXRUZXh0KCk7XHJcbiAgICBhc3NlcnQuZXF1YWwoYWN0dWFsSGVhZGVyLGtleXdvcmQsJ1BhZ2UgaGVhZGVyIGlzIGluY29ycmVjdCcpO1xyXG5cclxufSk7XHJcblxyXG5UaGVuKC9edGhlIHVzZXIgY2xpY2tzIHRoZSBcIiguKilcIiBCdXR0b24kLywgYXN5bmMgKGtleXdvcmQpID0+IHtcclxuICAgIFxyXG4gICAgY29uc3QgYmFkQnV0dG9uID0gJChcIi4vL2J1dHRvblt0ZXh0KCk9J1wiICsga2V5d29yZCArIFwiJ11cIik7XHJcbiAgICBhd2FpdCBiYWRCdXR0b24uY2xpY2soKTtcclxuICAgIFxyXG59KTtcclxuXHJcbkdpdmVuKFwidGhlIHVzZXIgbmF2aWdhdGUgdG8gdGhlIGhvbWUgcGFnZVwiLCBhc3luYygpID0+eyAgICAgICAgIFxyXG4gICAgXHJcbiAgICBhd2FpdCBicm93c2VyLnVybChcIi9cIik7XHJcbiAgICBhd2FpdCBicm93c2VyLm1heGltaXplV2luZG93KCk7XHJcblxyXG4gICAgdmFyIGFjdHVhbEhlYWRlciA9IGF3YWl0IGhvbWVQYWdlVGl0bGUuZ2V0VGV4dCgpO1xyXG4gICAgdmFyIGFjdHVhbEhlYWRlciA9IGF3YWl0IGFjdHVhbEhlYWRlci5yZXBsYWNlKC8oXFxyXFxufFxcbnxcXHIpL2dtLCBcIiBcIik7XHJcblxyXG4gICAgYXNzZXJ0LmVxdWFsKGFjdHVhbEhlYWRlcixcIlVJIFRlc3QgQXV0b21hdGlvbiBQbGF5Z3JvdW5kXCIsJ1BhZ2UgaGVhZGVyIGlzIGluY29ycmVjdCcpOyAgICBcclxuXHJcbn0pOyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQSxLQUFGO0VBQVNDLElBQVQ7RUFBZUM7QUFBZixJQUF3QkMsT0FBTyxDQUFDLDBCQUFELENBQXJDOztBQUVBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUUsTUFBTSxHQUFHRCxJQUFJLENBQUNDLE1BQXBCO0FBR0EsTUFBTUMsYUFBYSxHQUFHQyxDQUFDLENBQUMsT0FBRCxDQUF2QjtBQUNBLE1BQU1DLGFBQWEsR0FBR0QsQ0FBQyxDQUFDLE9BQUQsQ0FBdkI7QUFHQUwsSUFBSSxDQUFDLG1DQUFELEVBQXNDLE1BQU9PLE9BQVAsSUFBbUI7RUFFekQsTUFBTUMsU0FBUyxHQUFHSCxDQUFDLENBQUMsa0JBQWtCRSxPQUFsQixHQUE0QixJQUE3QixDQUFuQjtFQUNBLE1BQU1DLFNBQVMsQ0FBQ0MsS0FBVixFQUFOO0VBRUEsTUFBTUMsWUFBWSxHQUFHLE1BQU1OLGFBQWEsQ0FBQ08sT0FBZCxFQUEzQjtFQUNBUixNQUFNLENBQUNTLEtBQVAsQ0FBYUYsWUFBYixFQUEwQkgsT0FBMUIsRUFBa0MsMEJBQWxDO0FBRUgsQ0FSRyxDQUFKO0FBVUFQLElBQUksQ0FBQyxxQ0FBRCxFQUF3QyxNQUFPTyxPQUFQLElBQW1CO0VBRTNELE1BQU1NLFNBQVMsR0FBR1IsQ0FBQyxDQUFDLHVCQUF1QkUsT0FBdkIsR0FBaUMsSUFBbEMsQ0FBbkI7RUFDQSxNQUFNTSxTQUFTLENBQUNKLEtBQVYsRUFBTjtBQUVILENBTEcsQ0FBSjtBQU9BWCxLQUFLLENBQUMsb0NBQUQsRUFBdUMsWUFBVTtFQUVsRCxNQUFNZ0IsT0FBTyxDQUFDQyxHQUFSLENBQVksR0FBWixDQUFOO0VBQ0EsTUFBTUQsT0FBTyxDQUFDRSxjQUFSLEVBQU47RUFFQSxJQUFJTixZQUFZLEdBQUcsTUFBTUosYUFBYSxDQUFDSyxPQUFkLEVBQXpCO0VBQ0EsSUFBSUQsWUFBWSxHQUFHLE1BQU1BLFlBQVksQ0FBQ08sT0FBYixDQUFxQixnQkFBckIsRUFBdUMsR0FBdkMsQ0FBekI7RUFFQWQsTUFBTSxDQUFDUyxLQUFQLENBQWFGLFlBQWIsRUFBMEIsK0JBQTFCLEVBQTBELDBCQUExRDtBQUVILENBVkksQ0FBTCJ9","map":{"version":3,"names":["Given","When","Then","require","chai","assert","clickPageText","$","homePageTitle","keyword","clickLink","click","actualHeader","getText","equal","badButton","browser","url","maximizeWindow","replace"],"sourceRoot":"F:\\VS Code projects\\Webdriverio\\Task 1\\StepDefinitions\\","sources":["HomePageSteps.js"],"sourcesContent":["const { Given, When, Then } = require('@wdio/cucumber-framework');\r\n\r\nconst chai = require('chai');\r\nconst assert = chai.assert; \r\n\r\n\r\nconst clickPageText = $(\".//h3\");\r\nconst homePageTitle = $(\".//h1\");\r\n\r\n\r\nThen(/^the user clicks the \"(.*)\" link$/, async (keyword) => {\r\n\r\n    const clickLink = $(\".//a[text()='\" + keyword + \"']\");\r\n    await clickLink.click();\r\n\r\n    const actualHeader = await clickPageText.getText();\r\n    assert.equal(actualHeader,keyword,'Page header is incorrect');\r\n\r\n});\r\n\r\nThen(/^the user clicks the \"(.*)\" Button$/, async (keyword) => {\r\n    \r\n    const badButton = $(\".//button[text()='\" + keyword + \"']\");\r\n    await badButton.click();\r\n    \r\n});\r\n\r\nGiven(\"the user navigate to the home page\", async() =>{         \r\n    \r\n    await browser.url(\"/\");\r\n    await browser.maximizeWindow();\r\n\r\n    var actualHeader = await homePageTitle.getText();\r\n    var actualHeader = await actualHeader.replace(/(\\r\\n|\\n|\\r)/gm, \" \");\r\n\r\n    assert.equal(actualHeader,\"UI Test Automation Playground\",'Page header is incorrect');    \r\n\r\n});"],"mappings":"AAAA,MAAM;EAAEA,KAAF;EAASC,IAAT;EAAeC;AAAf,IAAwBC,OAAO,CAAC,0BAAD,CAArC;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,MAAM,GAAGD,IAAI,CAACC,MAApB;AAGA,MAAMC,aAAa,GAAGC,CAAC,CAAC,OAAD,CAAvB;AACA,MAAMC,aAAa,GAAGD,CAAC,CAAC,OAAD,CAAvB;AAGAL,IAAI,CAAC,mCAAD,EAAsC,MAAOO,OAAP,IAAmB;EAEzD,MAAMC,SAAS,GAAGH,CAAC,CAAC,kBAAkBE,OAAlB,GAA4B,IAA7B,CAAnB;EACA,MAAMC,SAAS,CAACC,KAAV,EAAN;EAEA,MAAMC,YAAY,GAAG,MAAMN,aAAa,CAACO,OAAd,EAA3B;EACAR,MAAM,CAACS,KAAP,CAAaF,YAAb,EAA0BH,OAA1B,EAAkC,0BAAlC;AAEH,CARG,CAAJ;AAUAP,IAAI,CAAC,qCAAD,EAAwC,MAAOO,OAAP,IAAmB;EAE3D,MAAMM,SAAS,GAAGR,CAAC,CAAC,uBAAuBE,OAAvB,GAAiC,IAAlC,CAAnB;EACA,MAAMM,SAAS,CAACJ,KAAV,EAAN;AAEH,CALG,CAAJ;AAOAX,KAAK,CAAC,oCAAD,EAAuC,YAAU;EAElD,MAAMgB,OAAO,CAACC,GAAR,CAAY,GAAZ,CAAN;EACA,MAAMD,OAAO,CAACE,cAAR,EAAN;EAEA,IAAIN,YAAY,GAAG,MAAMJ,aAAa,CAACK,OAAd,EAAzB;EACA,IAAID,YAAY,GAAG,MAAMA,YAAY,CAACO,OAAb,CAAqB,gBAArB,EAAuC,GAAvC,CAAzB;EAEAd,MAAM,CAACS,KAAP,CAAaF,YAAb,EAA0B,+BAA1B,EAA0D,0BAA1D;AAEH,CAVI,CAAL"}},"mtime":1656855932680},"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\StepDefinitions\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\StepDefinitions\\\\TextInputPageSteps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"const {\n  Then\n} = require('@wdio/cucumber-framework');\n\nconst chai = require('chai');\n\nconst assert = chai.assert;\nlet userinput = \"\"; //Then the user clicks the button & verifies the button text\n\nThen(/^the user clicks the button & verifies the button text$/, async () => {\n  const updatebutton = $(\".//button[@id='updatingButton']\");\n  await updatebutton.click(); //await browser.debug();\n\n  const expectedtext = userinput;\n  const actualtext = userinput; //console.log(\"button text = \" + actualtext);\n\n  assert.equal(actualtext, expectedtext, 'button text is incorect!');\n}); //Then user types \"My Input\" in the text box\n\nThen(/^user types \"(.*)\" in the text box$/, async text => {\n  userinput = text;\n  const textfield = $(\".//input[@id='newButtonName']\");\n  await textfield.setValue(text);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUaGVuIiwicmVxdWlyZSIsImNoYWkiLCJhc3NlcnQiLCJ1c2VyaW5wdXQiLCJ1cGRhdGVidXR0b24iLCIkIiwiY2xpY2siLCJleHBlY3RlZHRleHQiLCJhY3R1YWx0ZXh0IiwiZXF1YWwiLCJ0ZXh0IiwidGV4dGZpZWxkIiwic2V0VmFsdWUiXSwic291cmNlUm9vdCI6IkY6XFxWUyBDb2RlIHByb2plY3RzXFxXZWJkcml2ZXJpb1xcVGFzayAxXFxTdGVwRGVmaW5pdGlvbnNcXCIsInNvdXJjZXMiOlsiVGV4dElucHV0UGFnZVN0ZXBzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgVGhlbiB9ID0gcmVxdWlyZSgnQHdkaW8vY3VjdW1iZXItZnJhbWV3b3JrJyk7XHJcblxyXG5jb25zdCBjaGFpID0gcmVxdWlyZSgnY2hhaScpO1xyXG5jb25zdCBhc3NlcnQgPSBjaGFpLmFzc2VydDsgXHJcblxyXG5sZXQgdXNlcmlucHV0PVwiXCI7XHJcblxyXG4vL1RoZW4gdGhlIHVzZXIgY2xpY2tzIHRoZSBidXR0b24gJiB2ZXJpZmllcyB0aGUgYnV0dG9uIHRleHRcclxuVGhlbigvXnRoZSB1c2VyIGNsaWNrcyB0aGUgYnV0dG9uICYgdmVyaWZpZXMgdGhlIGJ1dHRvbiB0ZXh0JC8sIGFzeW5jICgpID0+IHtcclxuICAgIFxyXG4gICAgY29uc3QgdXBkYXRlYnV0dG9uID0gJChcIi4vL2J1dHRvbltAaWQ9J3VwZGF0aW5nQnV0dG9uJ11cIik7XHJcbiAgICBhd2FpdCB1cGRhdGVidXR0b24uY2xpY2soKTtcclxuICAgIC8vYXdhaXQgYnJvd3Nlci5kZWJ1ZygpO1xyXG5cclxuICAgIGNvbnN0IGV4cGVjdGVkdGV4dCA9IHVzZXJpbnB1dDtcclxuICAgIGNvbnN0IGFjdHVhbHRleHQgPSB1c2VyaW5wdXQ7XHJcbiAgICAvL2NvbnNvbGUubG9nKFwiYnV0dG9uIHRleHQgPSBcIiArIGFjdHVhbHRleHQpO1xyXG5cclxuICAgIGFzc2VydC5lcXVhbChhY3R1YWx0ZXh0LGV4cGVjdGVkdGV4dCwnYnV0dG9uIHRleHQgaXMgaW5jb3JlY3QhJyk7XHJcbiAgICBcclxufSk7XHJcblxyXG4vL1RoZW4gdXNlciB0eXBlcyBcIk15IElucHV0XCIgaW4gdGhlIHRleHQgYm94XHJcblRoZW4oL151c2VyIHR5cGVzIFwiKC4qKVwiIGluIHRoZSB0ZXh0IGJveCQvLCBhc3luYyAodGV4dCkgPT4ge1xyXG4gICAgXHJcbiAgICB1c2VyaW5wdXQgPSB0ZXh0O1xyXG4gICAgY29uc3QgdGV4dGZpZWxkID0gJChcIi4vL2lucHV0W0BpZD0nbmV3QnV0dG9uTmFtZSddXCIpO1xyXG4gICAgYXdhaXQgdGV4dGZpZWxkLnNldFZhbHVlKHRleHQpO1xyXG4gICAgXHJcbn0pOyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQTtBQUFGLElBQVdDLE9BQU8sQ0FBQywwQkFBRCxDQUF4Qjs7QUFFQSxNQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1FLE1BQU0sR0FBR0QsSUFBSSxDQUFDQyxNQUFwQjtBQUVBLElBQUlDLFNBQVMsR0FBQyxFQUFkLEMsQ0FFQTs7QUFDQUosSUFBSSxDQUFDLHlEQUFELEVBQTRELFlBQVk7RUFFeEUsTUFBTUssWUFBWSxHQUFHQyxDQUFDLENBQUMsaUNBQUQsQ0FBdEI7RUFDQSxNQUFNRCxZQUFZLENBQUNFLEtBQWIsRUFBTixDQUh3RSxDQUl4RTs7RUFFQSxNQUFNQyxZQUFZLEdBQUdKLFNBQXJCO0VBQ0EsTUFBTUssVUFBVSxHQUFHTCxTQUFuQixDQVB3RSxDQVF4RTs7RUFFQUQsTUFBTSxDQUFDTyxLQUFQLENBQWFELFVBQWIsRUFBd0JELFlBQXhCLEVBQXFDLDBCQUFyQztBQUVILENBWkcsQ0FBSixDLENBY0E7O0FBQ0FSLElBQUksQ0FBQyxxQ0FBRCxFQUF3QyxNQUFPVyxJQUFQLElBQWdCO0VBRXhEUCxTQUFTLEdBQUdPLElBQVo7RUFDQSxNQUFNQyxTQUFTLEdBQUdOLENBQUMsQ0FBQywrQkFBRCxDQUFuQjtFQUNBLE1BQU1NLFNBQVMsQ0FBQ0MsUUFBVixDQUFtQkYsSUFBbkIsQ0FBTjtBQUVILENBTkcsQ0FBSiJ9","map":{"version":3,"names":["Then","require","chai","assert","userinput","updatebutton","$","click","expectedtext","actualtext","equal","text","textfield","setValue"],"sourceRoot":"F:\\VS Code projects\\Webdriverio\\Task 1\\StepDefinitions\\","sources":["TextInputPageSteps.js"],"sourcesContent":["const { Then } = require('@wdio/cucumber-framework');\r\n\r\nconst chai = require('chai');\r\nconst assert = chai.assert; \r\n\r\nlet userinput=\"\";\r\n\r\n//Then the user clicks the button & verifies the button text\r\nThen(/^the user clicks the button & verifies the button text$/, async () => {\r\n    \r\n    const updatebutton = $(\".//button[@id='updatingButton']\");\r\n    await updatebutton.click();\r\n    //await browser.debug();\r\n\r\n    const expectedtext = userinput;\r\n    const actualtext = userinput;\r\n    //console.log(\"button text = \" + actualtext);\r\n\r\n    assert.equal(actualtext,expectedtext,'button text is incorect!');\r\n    \r\n});\r\n\r\n//Then user types \"My Input\" in the text box\r\nThen(/^user types \"(.*)\" in the text box$/, async (text) => {\r\n    \r\n    userinput = text;\r\n    const textfield = $(\".//input[@id='newButtonName']\");\r\n    await textfield.setValue(text);\r\n    \r\n});"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAWC,OAAO,CAAC,0BAAD,CAAxB;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,MAAM,GAAGD,IAAI,CAACC,MAApB;AAEA,IAAIC,SAAS,GAAC,EAAd,C,CAEA;;AACAJ,IAAI,CAAC,yDAAD,EAA4D,YAAY;EAExE,MAAMK,YAAY,GAAGC,CAAC,CAAC,iCAAD,CAAtB;EACA,MAAMD,YAAY,CAACE,KAAb,EAAN,CAHwE,CAIxE;;EAEA,MAAMC,YAAY,GAAGJ,SAArB;EACA,MAAMK,UAAU,GAAGL,SAAnB,CAPwE,CAQxE;;EAEAD,MAAM,CAACO,KAAP,CAAaD,UAAb,EAAwBD,YAAxB,EAAqC,0BAArC;AAEH,CAZG,CAAJ,C,CAcA;;AACAR,IAAI,CAAC,qCAAD,EAAwC,MAAOW,IAAP,IAAgB;EAExDP,SAAS,GAAGO,IAAZ;EACA,MAAMC,SAAS,GAAGN,CAAC,CAAC,+BAAD,CAAnB;EACA,MAAMM,SAAS,CAACC,QAAV,CAAmBF,IAAnB,CAAN;AAEH,CANG,CAAJ"}},"mtime":1656855313683},"{\"assumptions\":{},\"sourceRoot\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\StepDefinitions\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"filename\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\\\\StepDefinitions\\\\ClientSideDelayPageSteps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"F:\\\\VS Code projects\\\\Webdriverio\\\\Task 1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.18.6:test":{"value":{"code":"const {\n  Then\n} = require('@wdio/cucumber-framework');\n\nconst chai = require('chai');\n\nconst assert = chai.assert; //Then the user verifies the \"Data calculated on the client side.\" label\n\nThen(/^the user verifies the \"(.*)\" label$/, async text => {\n  const label = $(\".//p[@class='bg-success']\"); // await label.waitForDisplayed(15000);\n\n  function getText() {\n    const labelText = label.getText();\n    console.log(\"My label = \" + labelText); //await browser.debug();\n\n    return labelText;\n  }\n\n  try {\n    const actualText = getText(); // const labelText =  await label.getText();\n\n    console.log(\"My label = \" + actualText);\n    await browser.debug();\n    assert.equal(actualText, text, 'label text is not as expected.');\n  } catch (error) {\n    await label.waitForDisplayed(10000);\n    getText();\n  } // const labelText =  await label.getText();\n  // assert.equal(labelText,text,'label text is not as expected.');\n\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUaGVuIiwicmVxdWlyZSIsImNoYWkiLCJhc3NlcnQiLCJ0ZXh0IiwibGFiZWwiLCIkIiwiZ2V0VGV4dCIsImxhYmVsVGV4dCIsImNvbnNvbGUiLCJsb2ciLCJhY3R1YWxUZXh0IiwiYnJvd3NlciIsImRlYnVnIiwiZXF1YWwiLCJlcnJvciIsIndhaXRGb3JEaXNwbGF5ZWQiXSwic291cmNlUm9vdCI6IkY6XFxWUyBDb2RlIHByb2plY3RzXFxXZWJkcml2ZXJpb1xcVGFzayAxXFxTdGVwRGVmaW5pdGlvbnNcXCIsInNvdXJjZXMiOlsiQ2xpZW50U2lkZURlbGF5UGFnZVN0ZXBzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgVGhlbiB9ID0gcmVxdWlyZSgnQHdkaW8vY3VjdW1iZXItZnJhbWV3b3JrJyk7XHJcblxyXG5jb25zdCBjaGFpID0gcmVxdWlyZSgnY2hhaScpO1xyXG5jb25zdCBhc3NlcnQgPSBjaGFpLmFzc2VydDsgXHJcblxyXG4vL1RoZW4gdGhlIHVzZXIgdmVyaWZpZXMgdGhlIFwiRGF0YSBjYWxjdWxhdGVkIG9uIHRoZSBjbGllbnQgc2lkZS5cIiBsYWJlbFxyXG5UaGVuKC9edGhlIHVzZXIgdmVyaWZpZXMgdGhlIFwiKC4qKVwiIGxhYmVsJC8sIGFzeW5jICh0ZXh0KSA9PiB7XHJcbiAgICBcclxuICAgICBjb25zdCBsYWJlbCA9ICQoXCIuLy9wW0BjbGFzcz0nYmctc3VjY2VzcyddXCIpO1xyXG4gICAgLy8gYXdhaXQgbGFiZWwud2FpdEZvckRpc3BsYXllZCgxNTAwMCk7XHJcblxyXG5cclxuICAgIGZ1bmN0aW9uIGdldFRleHQoKVxyXG4gICAge1xyXG4gICAgICAgIGNvbnN0IGxhYmVsVGV4dCA9IGxhYmVsLmdldFRleHQoKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIk15IGxhYmVsID0gXCIgKyBsYWJlbFRleHQpO1xyXG4gICAgICAgIC8vYXdhaXQgYnJvd3Nlci5kZWJ1ZygpO1xyXG4gICAgICAgIHJldHVybiBsYWJlbFRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgICBcclxuICAgICAgICBjb25zdCBhY3R1YWxUZXh0ID0gZ2V0VGV4dCgpO1xyXG4gICAgICAgIC8vIGNvbnN0IGxhYmVsVGV4dCA9ICBhd2FpdCBsYWJlbC5nZXRUZXh0KCk7XHJcbiAgICAgICAgIGNvbnNvbGUubG9nKFwiTXkgbGFiZWwgPSBcIiArIGFjdHVhbFRleHQpO1xyXG4gICAgICAgIGF3YWl0IGJyb3dzZXIuZGVidWcoKTtcclxuICAgICAgICBhc3NlcnQuZXF1YWwoYWN0dWFsVGV4dCx0ZXh0LCdsYWJlbCB0ZXh0IGlzIG5vdCBhcyBleHBlY3RlZC4nKTtcclxuXHJcbiAgICB9IFxyXG5cclxuICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGF3YWl0IGxhYmVsLndhaXRGb3JEaXNwbGF5ZWQoMTAwMDApO1xyXG4gICAgICAgIGdldFRleHQoKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBjb25zdCBsYWJlbFRleHQgPSAgYXdhaXQgbGFiZWwuZ2V0VGV4dCgpO1xyXG4gICAgLy8gYXNzZXJ0LmVxdWFsKGxhYmVsVGV4dCx0ZXh0LCdsYWJlbCB0ZXh0IGlzIG5vdCBhcyBleHBlY3RlZC4nKTtcclxuICAgIFxyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQUYsSUFBV0MsT0FBTyxDQUFDLDBCQUFELENBQXhCOztBQUVBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUUsTUFBTSxHQUFHRCxJQUFJLENBQUNDLE1BQXBCLEMsQ0FFQTs7QUFDQUgsSUFBSSxDQUFDLHNDQUFELEVBQXlDLE1BQU9JLElBQVAsSUFBZ0I7RUFFeEQsTUFBTUMsS0FBSyxHQUFHQyxDQUFDLENBQUMsMkJBQUQsQ0FBZixDQUZ3RCxDQUd6RDs7RUFHQSxTQUFTQyxPQUFULEdBQ0E7SUFDSSxNQUFNQyxTQUFTLEdBQUdILEtBQUssQ0FBQ0UsT0FBTixFQUFsQjtJQUNBRSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBZ0JGLFNBQTVCLEVBRkosQ0FHSTs7SUFDQSxPQUFPQSxTQUFQO0VBQ0g7O0VBRUQsSUFBSTtJQUVBLE1BQU1HLFVBQVUsR0FBR0osT0FBTyxFQUExQixDQUZBLENBR0E7O0lBQ0NFLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFnQkMsVUFBNUI7SUFDRCxNQUFNQyxPQUFPLENBQUNDLEtBQVIsRUFBTjtJQUNBVixNQUFNLENBQUNXLEtBQVAsQ0FBYUgsVUFBYixFQUF3QlAsSUFBeEIsRUFBNkIsZ0NBQTdCO0VBRUgsQ0FSRCxDQVVBLE9BQU9XLEtBQVAsRUFBYztJQUNWLE1BQU1WLEtBQUssQ0FBQ1csZ0JBQU4sQ0FBdUIsS0FBdkIsQ0FBTjtJQUNBVCxPQUFPO0VBQ1YsQ0EzQndELENBNkJ6RDtFQUNBOztBQUVILENBaENHLENBQUoifQ==","map":{"version":3,"names":["Then","require","chai","assert","text","label","$","getText","labelText","console","log","actualText","browser","debug","equal","error","waitForDisplayed"],"sourceRoot":"F:\\VS Code projects\\Webdriverio\\Task 1\\StepDefinitions\\","sources":["ClientSideDelayPageSteps.js"],"sourcesContent":["const { Then } = require('@wdio/cucumber-framework');\r\n\r\nconst chai = require('chai');\r\nconst assert = chai.assert; \r\n\r\n//Then the user verifies the \"Data calculated on the client side.\" label\r\nThen(/^the user verifies the \"(.*)\" label$/, async (text) => {\r\n    \r\n     const label = $(\".//p[@class='bg-success']\");\r\n    // await label.waitForDisplayed(15000);\r\n\r\n\r\n    function getText()\r\n    {\r\n        const labelText = label.getText();\r\n        console.log(\"My label = \" + labelText);\r\n        //await browser.debug();\r\n        return labelText;\r\n    }\r\n\r\n    try {\r\n        \r\n        const actualText = getText();\r\n        // const labelText =  await label.getText();\r\n         console.log(\"My label = \" + actualText);\r\n        await browser.debug();\r\n        assert.equal(actualText,text,'label text is not as expected.');\r\n\r\n    } \r\n\r\n    catch (error) {\r\n        await label.waitForDisplayed(10000);\r\n        getText();\r\n    }\r\n\r\n    // const labelText =  await label.getText();\r\n    // assert.equal(labelText,text,'label text is not as expected.');\r\n    \r\n});\r\n"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAWC,OAAO,CAAC,0BAAD,CAAxB;;AAEA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,MAAM,GAAGD,IAAI,CAACC,MAApB,C,CAEA;;AACAH,IAAI,CAAC,sCAAD,EAAyC,MAAOI,IAAP,IAAgB;EAExD,MAAMC,KAAK,GAAGC,CAAC,CAAC,2BAAD,CAAf,CAFwD,CAGzD;;EAGA,SAASC,OAAT,GACA;IACI,MAAMC,SAAS,GAAGH,KAAK,CAACE,OAAN,EAAlB;IACAE,OAAO,CAACC,GAAR,CAAY,gBAAgBF,SAA5B,EAFJ,CAGI;;IACA,OAAOA,SAAP;EACH;;EAED,IAAI;IAEA,MAAMG,UAAU,GAAGJ,OAAO,EAA1B,CAFA,CAGA;;IACCE,OAAO,CAACC,GAAR,CAAY,gBAAgBC,UAA5B;IACD,MAAMC,OAAO,CAACC,KAAR,EAAN;IACAV,MAAM,CAACW,KAAP,CAAaH,UAAb,EAAwBP,IAAxB,EAA6B,gCAA7B;EAEH,CARD,CAUA,OAAOW,KAAP,EAAc;IACV,MAAMV,KAAK,CAACW,gBAAN,CAAuB,KAAvB,CAAN;IACAT,OAAO;EACV,CA3BwD,CA6BzD;EACA;;AAEH,CAhCG,CAAJ"}},"mtime":1656855406181}}